var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AddSubscription.html",[0,0.058,1,2.458]],["body/interfaces/AddSubscription.html",[0,0.078,1,3.953,2,0.65,3,0.5,4,3.649,5,1.078,6,2.197,7,3.309,8,2.197,9,2.992,10,3.284,11,2.992,12,4.882,13,4.983,14,4.139,15,3.282,16,1.392,17,1.919,18,0.598,19,4.882,20,4.714,21,2.197,22,4.882,23,1.484,24,0.023,25,1.484,26,0.453,27,1.078,28,1.008,29,0.02,30,0.02]],["title/interfaces/BackendFactoryInput.html",[0,0.058,31,2.732]],["body/interfaces/BackendFactoryInput.html",[0,0.073,2,0.609,3,0.468,5,1.008,9,2.8,11,2.8,18,0.56,24,0.024,26,0.424,28,0.944,29,0.02,30,0.02,31,3.415,32,3.073,33,0.884,34,1.795,35,1.716,36,1.795,37,4.569,38,3.073,39,2.207,40,3.873,41,2.056,42,5.644,43,1.682,44,2.207,45,4.785,46,4.913,47,4.785,48,3.415,49,2.572,50,1.862,51,5.644,52,4.569,53,1.919,54,3.415,55,3.873,56,1.611,57,1.577,58,2.8]],["title/interfaces/BackendInput.html",[0,0.058,59,2.732]],["body/interfaces/BackendInput.html",[0,0.081,2,0.68,3,0.523,5,1.127,18,0.626,24,0.022,26,0.473,29,0.021,30,0.021,32,3.434,33,0.736,34,2.006,35,2.061,39,2.466,46,4.512,56,1.723,59,3.816,60,2.716,61,2.297,62,4.328]],["title/interfaces/ConnectionBase.html",[0,0.058,63,1.902]],["body/interfaces/ConnectionBase.html",[0,0.05,2,0.421,3,0.323,5,0.697,6,1.421,7,2.491,8,2.489,13,2.677,15,2.302,16,1.221,17,1.241,18,0.387,20,3.307,21,1.421,23,1.553,24,0.025,25,1.345,26,0.54,27,0.977,28,1.203,29,0.015,30,0.015,33,0.638,34,1.739,50,1.771,61,1.421,63,1.644,64,1.935,65,1.935,66,1.526,67,0.96,68,1.654,69,1.629,70,2.673,71,2.677,72,3.158,73,2.677,74,2.361,75,1.241,76,2.124,77,3.158,78,1.644,79,2.677,80,2.489,81,2.137,82,1.935,83,1.023,84,3.158,85,1.163,86,3.158,87,2.361,88,1.526,89,2.711,90,3.158,91,1.991,92,3.158,93,1.327,94,2.677,95,4.424,96,3.158,97,1.263,98,3.158,99,3.158,100,3.158,101,2.302,102,2.677,103,1.935,104,1.778,105,3.158,106,3.158,107,2.677,108,2.677,109,3.158,110,1.859,111,2.677,112,2.361,113,2.137,114,3.158,115,0.914,116,1.327,117,1.739,118,2.124,119,1.778,120,3.158,121,2.677,122,2.174,123,2.677,124,3.158,125,2.361,126,2.361,127,3.158,128,1.644,129,1.644,130,3.158,131,3.158,132,3.158,133,1.023,134,2.124,135,3.158,136,3.158,137,1.526,138,2.124,139,1.644,140,2.361,141,3.158,142,2.302,143,2.124,144,2.124,145,3.158,146,1.935,147,3.158,148,1.935,149,3.158,150,1.023,151,2.677,152,3.158,153,2.677,154,1.421,155,1.644,156,3.158,157,1.421,158,1.644,159,2.677,160,2.677,161,2.677,162,1.644,163,1.023,164,3.158,165,1.644,166,2.711,167,1.526,168,2.361,169,3.158,170,2.361,171,1.023,172,3.158,173,2.677]],["title/interfaces/DragLayer.html",[0,0.058,174,1.902]],["body/interfaces/DragLayer.html",[0,0.043,2,0.362,3,0.278,5,0.599,9,1.664,16,0.876,17,1.067,18,0.333,23,1.207,24,0.023,25,0.825,26,0.55,27,0.599,28,0.561,29,0.014,30,0.014,33,0.909,34,1.56,35,1.67,41,1.221,43,0.999,44,1.311,50,1.427,57,1.62,58,1.664,61,2.112,63,2.066,64,1.664,65,1.664,66,1.311,69,2.022,70,1.311,88,1.311,97,1.133,108,2.301,110,1.14,111,2.301,115,1.43,116,2.411,117,2.029,119,1.528,122,1.844,125,2.029,126,2.967,139,1.413,148,2.433,150,0.879,158,2.442,161,2.301,162,1.413,163,1.286,165,1.413,171,1.673,173,2.301,174,2.066,175,1.528,176,0.937,177,2.582,178,2.066,179,2.715,180,2.873,181,2.715,182,2.029,183,1.528,184,1.826,185,1.826,186,2.715,187,2.715,188,2.67,189,3.093,190,2.301,191,2.715,192,2.301,193,2.029,194,1.826,195,3.957,196,2.029,197,4.289,198,2.301,199,1.52,200,2.235,201,3.156,202,2.301,203,1.786,204,0.682,205,2.715,206,2.433,207,1.826,208,2.715,209,2.301,210,1.14,211,2.715,212,1.067,213,1.664,214,2.715,215,1.221,216,2.642,217,1.311,218,2.029,219,1.311,220,2.029,221,2.301,222,1.413,223,2.967,224,1.14,225,1.728,226,2.301,227,2.715,228,2.301,229,2.029,230,2.301,231,2.715,232,1.221,233,1.221,234,1.664,235,2.715,236,2.715,237,2.301,238,3.97,239,2.715,240,2.715,241,2.029,242,1.786,243,1.664,244,1.311,245,2.301,246,2.029,247,2.715,248,1.826,249,2.715,250,2.301,251,1.664,252,2.715,253,1.528,254,1.14,255,2.301,256,1.826,257,2.029,258,1.14,259,1.664,260,2.029,261,2.433,262,1.826,263,3.508,264,1.528,265,2.301,266,2.715,267,1.826,268,2.301,269,1.311,270,2.715]],["title/classes/DragLayerConnectionClass.html",[271,1.262,272,2.732]],["body/classes/DragLayerConnectionClass.html",[2,0.557,3,0.428,8,1.88,15,2.777,16,1.178,18,0.512,20,3.989,23,1.884,24,0.024,25,1.788,26,0.607,27,1.298,28,1.214,29,0.019,30,0.019,50,1.27,53,1.755,56,1.523,69,1.965,70,3.214,71,3.542,97,1.193,107,3.542,110,2.242,162,2.174,174,2.174,176,1.442,195,2.561,216,2.353,271,1.442,272,3.123,273,3.542,274,3.542,275,2.174,276,5.88,277,5.88,278,5.88,279,2.561,280,3.123,281,4.524,282,5.252,283,2.561,284,1.88,285,4.178,286,4.178,287,4.178,288,3.542,289,4.178,290,4.178]],["title/interfaces/DragLayerMonitor.html",[0,0.058,216,2.058]],["body/interfaces/DragLayerMonitor.html",[0,0.081,2,0.673,3,0.517,5,1.116,16,1.325,17,1.987,18,0.62,24,0.022,28,1.044,29,0.021,30,0.021,53,2.124,97,1.443,115,1.044,142,3.331,174,2.631,215,2.275,216,2.846,291,4.286,292,3.4,293,2.275,294,2.631,295,2.275,296,2.442,297,3.779,298,3.4,299,2.631]],["title/directives/DragPreviewDirective.html",[300,1.111,301,2.058]],["body/directives/DragPreviewDirective.html",[2,0.644,3,0.495,5,1.068,18,0.593,24,0.022,26,0.542,27,1.068,29,0.02,30,0.02,33,0.698,35,1.471,85,1.781,115,1.207,133,1.567,178,3.041,180,2.63,184,3.253,199,1.893,204,1.216,242,2.63,300,1.471,301,2.723,302,3.253,303,2.176,304,2.035,305,2.964,306,3.615,307,3.253,308,6.281,309,3.536,310,2.176,311,3.253]],["title/interfaces/DragPreviewOptions.html",[0,0.058,309,2.058]],["body/interfaces/DragPreviewOptions.html",[0,0.05,2,0.417,3,0.321,5,0.692,18,0.384,24,0.022,26,0.539,27,1.451,29,0.015,30,0.019,33,0.635,34,1.231,36,1.231,53,1.848,56,1.256,57,1.082,82,1.92,85,2.03,115,1.37,138,2.959,143,2.107,148,1.92,150,1.425,157,1.979,167,2.125,171,1.015,176,2.079,177,1.41,180,2.925,183,2.477,184,2.959,189,1.764,195,1.92,199,1.786,203,1.41,204,1.106,212,1.231,219,2.125,284,1.979,295,2.288,299,2.289,304,1.015,309,1.764,312,2.342,313,5.513,314,5.513,315,4.31,316,5.513,317,5.513,318,3.984,319,3.708,320,3.708,321,2.869,322,4.674,323,3.39,324,3.288,325,2.696,326,3.133,327,3.288,328,4.16,329,4.674,330,2.656,331,4.399,332,4.399,333,2.656,334,4.31,335,2.342,336,2.342,337,2.656,338,1.92,339,1.63,340,2.342,341,3.133,342,3.133,343,1.63,344,2.107,345,3.133,346,2.656,347,3.133,348,4.399,349,3.133,350,3.133,351,1.231,352,1.92,353,2.107,354,4.399,355,3.133,356,1.764,357,3.133,358,3.133,359,1.764,360,1.764,361,2.959,362,3.729]],["title/interfaces/DragSource.html",[0,0.058,304,1.184]],["body/interfaces/DragSource.html",[0,0.051,2,0.429,3,0.33,5,0.712,8,2.64,16,1.232,17,1.267,18,0.395,23,1.57,24,0.024,25,1.57,26,0.618,27,1.376,28,1.288,29,0.016,30,0.016,33,0.805,35,0.98,36,2.029,50,1.364,56,1.281,61,1.45,63,1.677,64,1.975,65,1.975,66,1.557,67,1.697,68,1.968,70,2.168,75,1.267,83,1.044,93,1.354,104,1.815,110,1.354,115,1.066,116,1.354,122,1.267,129,1.677,150,1.044,158,1.677,163,1.672,180,1.45,183,3.421,185,3.018,199,1.454,204,1.128,210,1.885,225,1.187,242,1.45,244,1.557,251,1.975,253,1.815,254,1.885,257,3.354,258,1.885,264,1.815,300,1.364,303,2.323,304,1.968,309,2.527,338,2.75,343,2.335,351,1.764,363,1.557,364,1.975,365,2.733,366,2.733,367,2.168,368,2.733,369,3.804,370,3.804,371,4.376,372,3.859,373,3.223,374,3.018,375,2.75,376,3.354,377,3.223,378,1.975,379,2.409,380,2.409,381,3.223,382,2.409,383,3.354,384,3.804,385,3.354,386,3.223,387,2.75,388,2.733,389,1.975,390,3.223,391,2.019,392,3.472,393,2.168,394,1.45,395,1.45,396,3.223,397,2.409,398,2.409,399,2.733]],["title/directives/DragSourceDirective.html",[300,1.111,400,2.058]],["body/directives/DragSourceDirective.html",[2,0.593,3,0.456,5,0.983,18,0.546,24,0.023,26,0.588,27,0.983,29,0.019,30,0.019,33,0.873,35,1.354,43,1.639,53,1.87,67,1.354,68,1.961,101,2.317,133,1.442,154,2.003,171,1.442,176,1.537,177,2.003,178,2.89,180,2.003,193,3.328,199,1.442,204,1.119,242,2.499,284,2.003,295,2.003,300,1.354,302,2.994,303,2.003,304,2.186,306,3.328,307,2.994,310,2.003,311,2.994,315,3.774,344,2.994,351,1.75,360,2.506,387,3.71,391,2.003,400,2.506,401,5.554,402,5.554,403,3.774,404,3.774,405,4.452,406,4.452]],["title/interfaces/DragSourceMonitor.html",[0,0.058,407,2.058]],["body/interfaces/DragSourceMonitor.html",[0,0.056,2,0.47,3,0.361,5,0.779,6,1.588,16,1.28,17,1.387,18,0.432,24,0.023,27,0.779,28,1.433,29,0.022,30,0.017,33,0.689,53,2.006,60,1.588,69,1.299,83,2.175,85,1.299,97,1.007,115,1.118,133,1.547,142,3.018,154,1.588,157,1.588,163,1.547,204,0.887,215,1.588,217,1.705,244,1.705,248,2.373,253,1.987,258,2.006,260,2.638,292,2.373,293,1.588,294,1.836,295,2.81,296,2.307,297,3.569,298,2.373,299,2.816,336,2.638,339,1.836,351,1.387,359,1.987,389,2.162,393,2.373,395,1.588,407,1.987,408,2.991,409,3.528,410,4.295,411,3.901,412,3.64,413,2.991,414,2.485,415,1.836,416,3.528,417,2.991,418,1.836,419,3.528,420,3.528,421,2.991,422,2.638,423,2.162,424,3.528,425,2.991,426,2.991,427,1.729,428,3.317,429,3.212,430,2.638,431,2.991,432,2.991,433,2.991,434,2.638,435,1.836,436,2.373,437,2.991,438,2.638,439,3.212,440,2.162,441,2.638,442,2.162]],["title/classes/DragSourceMonitorClass.html",[271,1.262,443,2.732]],["body/classes/DragSourceMonitorClass.html",[2,0.551,3,0.423,16,1.17,18,0.507,23,1.612,24,0.025,25,1.612,26,0.572,27,1.17,28,1.423,29,0.018,30,0.018,56,1.513,110,1.737,142,3.044,271,1.427,275,2.151,279,2.533,280,3.09,283,2.533,407,2.328,410,3.935,411,3.935,412,3.935,443,3.09,444,2.781,445,4.96,446,6.17,447,4.373,448,4.373,449,4.373,450,4.373,451,4.373,452,4.373,453,4.373,454,4.493,455,4.493,456,4.134]],["title/interfaces/DragSourceOptions.html",[0,0.058,387,2.24]],["body/interfaces/DragSourceOptions.html",[0,0.072,2,0.602,3,0.462,5,0.997,18,0.553,24,0.024,26,0.419,27,1.345,29,0.02,30,0.02,33,0.651,34,2.202,35,1.373,56,1.6,57,1.559,85,1.663,115,0.933,150,1.463,176,1.559,196,3.376,206,4.014,217,2.182,225,1.663,246,3.376,258,1.897,304,1.815,312,3.376,360,2.543,361,3.769,387,2.767,391,2.032,457,3.828,458,5.166,459,4.763,460,3.769,461,4.751,462,3.037,463,2.767,464,3.376,465,4.516,466,4.516,467,3.037,468,3.376,469,4.516]],["title/interfaces/DragSourceSpec.html",[0,0.058,395,1.644]],["body/interfaces/DragSourceSpec.html",[0,0.078,2,0.324,3,0.249,5,0.538,6,1.096,16,1.081,17,0.957,18,0.299,23,1.677,24,0.025,25,1.489,26,0.578,27,1.394,28,1.287,29,0.015,30,0.015,33,0.351,35,0.741,36,0.957,41,1.096,43,0.897,54,1.821,56,0.695,60,1.648,61,1.096,75,0.957,80,1.096,81,1.177,83,1.787,87,1.821,91,1.096,97,1.633,101,1.268,110,1.023,115,1.287,117,1.73,118,1.638,122,0.957,128,1.268,129,1.268,133,1.426,142,1.906,150,1.187,163,1.187,166,1.493,171,1.907,175,1.371,176,1.52,182,1.821,188,2.464,201,2.464,203,1.096,204,1.438,206,2.245,207,1.638,212,0.957,215,1.648,217,1.177,218,1.821,219,1.177,225,1.349,232,1.096,251,3.38,254,1.023,261,1.493,269,1.77,293,1.648,295,1.096,296,1.177,299,1.906,310,1.648,318,2.245,338,1.493,339,1.268,352,1.493,356,1.371,364,1.493,367,2.464,378,1.493,391,1.096,395,1.096,397,1.821,407,3.509,410,2.464,414,1.268,415,2.548,418,1.268,427,1.398,428,3.001,429,1.638,436,1.638,438,1.821,440,2.245,442,1.493,458,2.065,459,2.738,467,1.638,468,1.821,470,2.065,471,1.821,472,1.493,473,1.493,474,1.821,475,3.217,476,2.436,477,2.065,478,2.436,479,2.436,480,2.436,481,2.436,482,2.436,483,2.436,484,3.105,485,4.402,486,2.436,487,3.663,488,3.663,489,1.821,490,1.821,491,2.436,492,3.663,493,2.436,494,2.065,495,2.436,496,2.436,497,2.436,498,2.436,499,2.436,500,2.065,501,2.436,502,2.065,503,2.065,504,2.245,505,2.065,506,2.436,507,1.821,508,2.436,509,2.065,510,2.065,511,2.065,512,2.065,513,2.065,514,2.436,515,2.245,516,2.436,517,2.436,518,1.493,519,2.065,520,2.065,521,2.436,522,1.493,523,2.436,524,2.436,525,2.436,526,1.638,527,2.436,528,1.371,529,3.663,530,1.821,531,2.436,532,2.065,533,2.436,534,1.821,535,2.436,536,2.065,537,2.436,538,2.245,539,2.436,540,1.638,541,2.065,542,2.065,543,1.821,544,1.268,545,2.065,546,1.821,547,2.065,548,1.821,549,2.065]],["title/interfaces/DropTarget.html",[0,0.058,363,1.766]],["body/interfaces/DropTarget.html",[0,0.061,2,0.51,3,0.392,5,0.846,6,1.724,8,2.538,16,1.245,17,1.506,18,0.47,23,1.534,24,0.023,25,1.534,26,0.614,27,1.113,28,1.286,29,0.018,30,0.018,33,0.728,35,1.165,36,1.982,50,1.165,56,1.093,57,1.322,61,1.724,63,1.993,64,2.347,65,2.347,67,1.715,68,1.941,69,1.41,70,1.851,75,1.506,78,1.993,83,1.827,104,2.157,110,1.609,115,0.791,116,1.609,122,1.982,129,1.993,163,1.241,183,3.175,199,1.634,210,2.119,244,1.851,251,2.347,254,1.609,257,2.863,258,1.609,264,2.157,300,1.165,303,2.27,304,1.634,338,2.347,343,1.993,351,2.216,363,2.724,371,4.781,372,3.77,374,2.577,375,2.347,376,2.863,383,2.863,384,3.248,388,3.248,389,2.347,392,3.793,393,2.577,394,1.724,418,1.993,427,1.61,528,2.157,544,1.993,550,2.347,551,5.044,552,3.831,553,3.831,554,3.393]],["title/directives/DropTargetDirective.html",[300,1.111,555,2.24]],["body/directives/DropTargetDirective.html",[2,0.595,3,0.457,5,0.985,10,3.742,18,0.547,23,1.357,24,0.023,25,1.357,26,0.562,27,0.985,28,0.922,29,0.019,30,0.019,33,0.644,43,1.644,67,1.357,68,1.964,101,2.323,110,1.876,154,2.009,171,1.446,193,3.337,199,1.446,230,4.717,242,2.504,288,3.785,300,1.357,302,3.003,303,2.727,306,3.337,307,3.003,351,1.755,363,3.216,403,3.785,404,3.785,427,1.274,554,3.003,555,2.736,556,6.752,557,5.564,558,4.159,559,4.717,560,5.564,561,4.464,562,4.464]],["title/interfaces/DropTargetMonitor.html",[0,0.058,563,2.058]],["body/interfaces/DropTargetMonitor.html",[0,0.057,2,0.473,3,0.364,5,0.784,6,1.598,16,1.284,17,1.396,18,0.435,23,1.08,24,0.023,25,1.08,26,0.504,27,1.284,28,1.423,29,0.022,30,0.017,33,0.512,53,2.015,60,1.598,69,1.308,81,2.317,83,2.221,85,1.308,97,1.014,115,0.991,128,1.849,133,1.554,144,3.226,146,3.564,157,1.598,163,1.554,215,1.598,217,2.317,219,1.716,222,1.849,232,1.598,244,1.716,253,2,258,2.015,292,2.389,293,1.598,294,1.849,295,2.816,296,2.317,297,3.586,298,2.389,299,2.826,310,1.598,336,2.655,343,1.849,351,1.396,385,2.655,389,2.177,393,2.389,411,3.911,412,3.653,413,3.012,414,1.849,427,1.786,429,3.226,430,2.655,431,3.012,432,3.012,433,3.012,434,4.06,435,1.849,436,2.389,437,3.012,438,2.655,439,2.389,440,2.177,441,3.586,563,2,564,3.012,565,3.552,566,3.012,567,4.797,568,3.552,569,3.012,570,3.552,571,3.552]],["title/classes/DropTargetMonitorClass.html",[271,1.262,572,2.732]],["body/classes/DropTargetMonitorClass.html",[2,0.527,3,0.405,16,1.137,18,0.485,23,1.742,24,0.025,25,1.742,26,0.584,27,1.34,28,1.414,29,0.018,30,0.018,53,1.662,56,1.471,110,1.662,133,1.669,144,3.465,146,3.511,176,1.366,271,1.366,275,2.059,279,2.425,280,2.958,283,2.425,284,1.78,299,2.981,411,3.853,412,3.853,445,4.857,447,4.282,448,4.282,449,4.282,450,4.282,451,4.282,452,4.282,453,4.282,454,4.368,455,4.368,563,2.228,566,3.354,569,3.354,572,2.958,573,2.661,574,6.069,575,3.957]],["title/interfaces/DropTargetSpec.html",[0,0.058,78,1.902]],["body/interfaces/DropTargetSpec.html",[0,0.053,2,0.441,3,0.339,5,0.731,6,1.49,11,2.03,16,1.353,17,1.302,18,0.406,23,1.802,24,0.023,25,1.592,26,0.55,27,1.434,28,1.266,29,0.018,30,0.016,33,0.66,43,1.219,53,1.391,57,1.143,60,2.057,75,1.302,78,1.724,80,1.49,81,2.53,83,2.13,85,1.219,91,1.49,97,1.495,101,1.724,110,1.921,115,0.944,117,2.058,128,1.724,133,1.696,146,3.209,148,2.03,150,1.073,163,1.696,166,2.03,171,1.696,176,1.143,188,3.523,190,2.808,200,1.865,204,1.149,212,1.302,215,1.49,217,2.209,224,1.391,225,2.079,232,1.49,258,1.921,269,1.6,293,1.49,295,1.49,298,2.228,299,1.724,305,2.03,310,1.49,338,2.03,343,1.724,389,2.03,395,2.057,414,1.724,415,2.38,427,1.793,428,2.03,429,2.228,434,3.418,440,2.03,441,2.476,468,3.418,471,2.476,472,2.03,473,2.802,474,2.476,515,2.03,518,2.03,519,2.808,522,2.03,541,2.808,542,2.808,543,2.476,544,2.38,545,2.808,546,2.476,547,2.808,548,2.476,549,2.808,563,3.603,576,2.808,577,2.228,578,3.312,579,3.312,580,2.808,581,2.476,582,3.312,583,3.312,584,3.312,585,2.808,586,3.312,587,3.312]],["title/interfaces/FactoryArgs.html",[0,0.058,588,2.458]],["body/interfaces/FactoryArgs.html",[0,0.078,2,0.654,3,0.503,18,0.602,24,0.024,26,0.608,29,0.021,30,0.021,50,2.112,56,1.684,588,3.304,589,3.011,590,3.011,591,6.323,592,6.323,593,6.323,594,6.323]],["title/interfaces/MonitorBase.html",[0,0.058,294,1.902]],["body/interfaces/MonitorBase.html",[0,0.057,2,0.473,3,0.364,5,0.784,16,1.199,18,0.435,24,0.024,26,0.329,28,1.423,29,0.017,30,0.017,38,2.389,67,1.459,97,1.014,115,1.389,157,3.084,199,1.554,200,2.701,203,1.598,204,0.893,219,3.09,222,2.496,223,4.54,225,2.475,271,1.226,294,1.849,296,1.716,323,3.419,324,4.347,391,1.598,395,1.598,442,3.328,447,4.06,448,4.06,449,4.06,450,4.06,451,4.06,452,4.06,453,4.06,595,3.012,596,3.012,597,2.389,598,6.073,599,4.93,600,3.552,601,4.797,602,3.552,603,4.797,604,3.552,605,3.012]],["title/interfaces/Offset.html",[0,0.058,323,2.058]],["body/interfaces/Offset.html",[0,0.079,2,0.663,3,0.509,5,1.098,18,0.61,24,0.023,26,0.59,29,0.021,30,0.021,56,1.697,60,2.239,263,4.752,318,4.036,323,2.801,606,3.719,607,3.719,608,4.975,609,4.975,610,5.583,611,5.583]],["title/modules/SkyhookDndModule.html",[39,1.766,612,1.766]],["body/modules/SkyhookDndModule.html",[2,0.602,3,0.462,24,0.024,29,0.02,30,0.02,32,3.037,34,1.775,39,3.387,49,3.155,224,1.897,301,3.883,400,3.883,555,4.226,612,2.707,613,3.828,614,3.769,615,3.828,616,3.828,617,3.828,618,3.828,619,4.751,620,3.828,621,2.767]],["title/injectables/SkyhookDndService.html",[75,1.436,622,1.644]],["body/injectables/SkyhookDndService.html",[1,3.954,2,0.388,3,0.298,4,2.176,5,0.922,6,1.31,7,2.351,8,2.945,16,1.178,18,0.357,21,1.31,23,1.841,24,0.024,25,1.485,26,0.621,27,1.078,28,1.009,29,0.015,30,0.015,33,0.602,41,1.31,43,1.072,44,1.407,67,0.885,68,1.353,70,2.017,75,1.144,76,1.958,78,2.173,80,1.879,83,1.353,85,1.072,89,2.559,91,2.541,93,1.223,103,2.559,115,1.102,118,1.958,133,1.353,137,2.359,150,1.353,154,1.31,157,2.645,163,1.83,165,2.173,171,1.582,174,2.776,199,1.353,201,1.958,204,1.227,207,1.958,210,2.051,217,1.407,225,2.164,229,2.176,261,1.784,265,2.468,279,1.784,300,0.885,304,1.904,310,1.879,321,1.515,351,1.144,360,1.639,363,2.577,385,3.65,391,1.879,392,2.809,394,1.31,395,2.197,423,1.784,427,1.394,435,2.173,440,2.559,489,2.176,494,2.468,512,2.468,515,1.784,518,2.559,550,1.784,554,2.809,597,1.958,622,1.31,623,2.176,624,2.912,625,1.958,626,2.912,627,2.912,628,2.468,629,2.912,630,2.912,631,2.912,632,2.912,633,2.468,634,2.912,635,2.912,636,2.912,637,2.912,638,5.878,639,2.912,640,2.468,641,2.912,642,2.912,643,2.468,644,2.176,645,2.912,646,2.912,647,2.468,648,4.176,649,2.912,650,2.912,651,2.912,652,2.468,653,2.176]],["title/interfaces/SourceConstructor.html",[0,0.058,654,2.732]],["body/interfaces/SourceConstructor.html",[0,0.087,2,0.725,3,0.557,24,0.022,29,0.022,30,0.022,589,3.335,590,3.335,654,4.068]],["title/interfaces/TargetConstructor.html",[0,0.058,655,2.732]],["body/interfaces/TargetConstructor.html",[0,0.087,2,0.725,3,0.557,24,0.022,29,0.022,30,0.022,589,3.335,590,3.335,655,4.068]],["title/coverage.html",[656,4.145]],["body/coverage.html",[0,0.108,1,1.804,3,0.275,4,2.941,24,0.025,26,0.249,29,0.014,30,0.014,31,2.005,32,2.647,50,1.978,59,2.005,63,1.396,64,3.146,65,3.146,75,1.054,78,1.396,93,1.127,155,2.973,174,1.396,195,1.644,204,0.674,216,1.51,271,1.609,272,2.005,273,2.274,274,2.274,291,2.274,292,3.135,294,1.396,300,1.417,301,1.51,302,3.135,304,0.869,309,1.51,312,2.941,320,4.599,323,1.51,363,1.296,387,1.644,395,1.207,400,1.51,407,1.51,408,2.274,427,0.766,443,2.005,444,3.453,470,2.274,471,2.941,555,1.644,563,1.51,564,2.274,572,2.005,573,3.135,576,2.274,588,1.804,589,3.501,590,3.501,595,2.274,596,2.274,606,2.005,607,2.005,622,1.207,654,2.005,655,2.005,656,2.274,657,1.804,658,2.682,659,2.682,660,5.816,661,5.467,662,5.714,663,5.467,664,2.682,665,3.935,666,2.682,667,6.728,668,2.274,669,2.274,670,2.274,671,2.274,672,2.274,673,2.274,674,2.274,675,3.935,676,2.274,677,2.274,678,2.274,679,2.274,680,2.274,681,2.274,682,2.274,683,2.274,684,2.274,685,2.682,686,3.336,687,2.274,688,2.274,689,2.274,690,2.274,691,2.682,692,3.951,693,2.274,694,4.66,695,2.274,696,2.274,697,2.274,698,2.274,699,2.274,700,2.274,701,2.682,702,2.682]],["title/dependencies.html",[224,1.835,703,2.63]],["body/dependencies.html",[7,2.941,24,0.024,29,0.021,30,0.021,113,2.524,224,2.571,704,3.905,705,5.224,706,5.224,707,4.429,708,5.224,709,5.224,710,5.224,711,5.224]],["title/miscellaneous/functions.html",[50,1.328,712,1.747]],["body/miscellaneous/functions.html",[18,0.422,23,2.063,24,0.024,25,2.063,26,0.599,27,1.498,29,0.016,30,0.016,35,1.428,50,1.047,91,2.113,204,1.18,282,4.867,283,3.8,311,4.564,427,1.34,444,2.316,573,2.316,588,3.595,589,2.11,590,3.518,668,3.981,669,3.981,670,3.981,671,2.919,672,3.981,673,2.919,674,3.981,676,3.981,679,2.919,680,3.981,681,2.919,682,3.981,683,3.981,686,3.981,687,3.981,688,3.981,689,3.981,690,3.981,697,2.919,698,3.981,699,2.919,700,3.981,712,1.939,713,3.443,714,3.443,715,5.344,716,3.443,717,3.443,718,2.919,719,3.443,720,3.443,721,2.919,722,4.696,723,3.443,724,4.696,725,3.443,726,4.696,727,3.443,728,3.443,729,3.443,730,3.443,731,3.443,732,3.443,733,3.443,734,3.443,735,3.443,736,3.443,737,3.443,738,3.443]],["title/index.html",[18,0.38,203,1.396,538,1.901]],["body/index.html",[0,0.039,3,0.248,9,1.483,14,2.052,15,1.897,21,1.089,24,0.013,29,0.013,30,0.013,33,0.794,34,1.433,35,1.484,36,1.433,41,1.089,43,2.214,44,2.839,57,0.836,61,2.196,66,1.169,67,0.736,80,1.089,81,1.761,83,1.696,88,1.169,112,1.81,113,3.138,115,1.242,119,1.363,122,0.951,128,1.897,137,3.046,139,1.897,148,1.483,150,1.181,154,1.641,162,1.26,167,1.169,168,1.81,171,1.421,175,2.469,177,1.089,178,2.282,183,1.363,189,1.363,194,1.628,201,2.452,202,2.052,203,1.089,207,1.628,212,1.724,221,3.091,224,1.017,225,1.342,232,1.089,234,1.483,241,2.725,243,2.234,254,1.532,255,2.052,256,1.628,259,1.483,271,0.836,275,1.897,284,1.089,296,1.169,300,0.736,319,1.628,325,2.234,328,1.628,329,2.052,333,2.052,335,1.81,337,2.052,339,1.897,351,1.433,352,1.483,353,2.452,359,2.469,365,2.052,367,2.452,394,1.089,414,1.26,415,1.26,418,1.897,423,2.234,427,0.691,435,1.26,460,1.628,463,1.483,467,1.628,472,1.483,489,1.81,502,2.052,504,1.483,518,1.483,528,1.363,532,2.052,534,1.81,538,1.483,540,1.628,544,1.897,548,1.81,559,3.091,577,1.628,585,2.052,621,3.209,623,2.725,703,3.091,704,3.279,739,3.914,740,3.646,741,4.138,742,3.646,743,2.421,744,2.421,745,2.421,746,3.646,747,2.052,748,3.646,749,2.052,750,3.091,751,2.421,752,1.81,753,2.452,754,2.052,755,2.421,756,1.81,757,2.052,758,2.052,759,2.421,760,2.052,761,2.421,762,2.421,763,2.421,764,1.628,765,2.421,766,4.386,767,1.81,768,2.421,769,2.421,770,3.646,771,3.646,772,2.421,773,1.81,774,2.421,775,2.421,776,2.421,777,2.421,778,2.421,779,2.421,780,3.646,781,2.421,782,2.421,783,3.091,784,2.421,785,1.628,786,1.81,787,2.725,788,2.421,789,2.052,790,2.421,791,2.421,792,1.81,793,2.421,794,2.052,795,2.421,796,2.421,797,2.421,798,2.421,799,2.421,800,2.421,801,2.421,802,2.052,803,2.421,804,2.421,805,1.81,806,2.421,807,2.421,808,1.81,809,2.421,810,2.421,811,2.421,812,2.421,813,2.421,814,2.421,815,2.421,816,2.421,817,2.421,818,2.421,819,2.421,820,1.81,821,2.421,822,2.421,823,2.421,824,1.628,825,2.421,826,2.421,827,2.234,828,2.421,829,2.421,830,2.421,831,1.81,832,4.386,833,3.646,834,2.421,835,2.421,836,2.421,837,2.052,838,2.421,839,2.421,840,3.646,841,2.421,842,2.421,843,5.236,844,2.052,845,2.052,846,2.421,847,2.421,848,2.421,849,2.421,850,2.421,851,1.81,852,2.052,853,2.421,854,2.421,855,2.421,856,2.421,857,1.81,858,4.386,859,2.421,860,2.421,861,2.421]],["title/modules.html",[612,2.362]],["body/modules.html",[24,0.022,29,0.022,30,0.022,39,2.629,360,3.064,462,3.66,612,2.629,862,5.442,863,4.614]],["title/overview.html",[864,4.145]],["body/overview.html",[0,0.072,24,0.024,29,0.02,30,0.02,34,1.785,39,3.375,49,2.557,224,1.908,271,1.568,300,1.381,301,3.816,321,2.927,400,3.816,555,4.153,612,2.717,613,3.851,614,3.055,615,3.851,616,3.851,617,3.851,618,3.851,619,4.768,620,3.851,621,2.783,622,2.044,864,3.851,865,3.446,866,4.542]],["title/miscellaneous/typealiases.html",[712,1.747,867,4.368]],["body/miscellaneous/typealiases.html",[18,0.634,24,0.023,26,0.48,29,0.021,30,0.021,33,0.746,83,1.676,391,2.737,427,1.476,554,4.347,606,3.866,607,4.547,712,2.912,824,4.091,868,5.172,869,5.172,870,3.479]],["title/miscellaneous/variables.html",[155,2.273,712,1.747]],["body/miscellaneous/variables.html",[11,3.226,18,0.501,24,0.024,26,0.54,29,0.018,30,0.018,33,0.759,34,1.608,35,1.601,53,2.446,57,1.412,85,1.506,93,2.212,113,2.969,122,1.608,155,2.129,157,1.841,176,2.247,204,1.028,222,2.129,248,2.752,281,4.463,284,2.929,304,1.325,363,1.976,427,1.168,444,2.752,573,2.752,622,2.369,677,4.935,678,4.935,684,4.935,692,3.468,693,4.935,695,4.935,696,4.935,704,4.594,712,2.303,718,4.463,721,3.468,827,2.507,870,2.752,871,5.821,872,5.265,873,5.265,874,5.265,875,4.091,876,4.091,877,4.091,878,4.091,879,3.468]],["title/additional-documentation/quickstart.html",[233,1.396,752,2.319,880,1.614]],["body/additional-documentation/quickstart.htmltitle/additional-documentation/guide.html",[233,1.396,880,1.614,912,2.319]],["body/additional-documentation/guide.html",[16,1.297,24,0.02,29,0.02,30,0.02,33,0.91,43,1.797,44,2.358,67,1.787,68,2.169,69,2.164,85,1.797,88,2.358,89,2.992,97,1.393,103,2.992,116,2.469,117,1.919,129,2.541,165,2.541,199,1.581,210,2.469,260,3.649,300,1.484,305,2.992,321,2.541,550,2.992,911,3.284,962,4.139,963,4.882,964,4.882,965,4.882]],["title/additional-documentation/guide/1.-creating-connections.html",[68,0.771,210,1.001,233,1.072,321,1.239,880,1.239]],["body/additional-documentation/guide/1.-creating-connections.html",[7,1.601,8,2.518,15,1.479,16,0.906,21,1.279,23,0.864,24,0.025,26,0.447,29,0.014,30,0.014,33,0.807,36,1.117,41,1.279,50,0.864,57,0.981,63,1.479,67,1.465,68,2.031,69,1.774,70,2.328,75,2.199,78,1.479,79,2.41,83,0.921,91,1.279,93,1.194,97,0.811,103,2.953,112,2.125,113,1.983,115,1.156,117,1.613,122,2.199,133,1.33,150,0.921,155,2.136,158,1.479,163,1.33,165,2.912,167,1.983,171,2.062,174,1.479,175,1.601,176,0.981,180,1.279,189,1.601,204,1.326,210,2.586,212,1.117,213,1.742,229,3.068,232,1.279,234,1.742,242,1.279,251,1.742,254,1.194,258,1.194,262,1.912,275,1.479,303,2.374,304,1.33,318,1.742,327,2.125,339,1.479,363,1.983,394,1.279,395,1.279,398,2.125,422,3.068,427,1.506,463,1.742,475,1.742,484,3.48,526,1.912,544,1.479,550,1.742,597,1.912,622,1.279,623,2.125,625,2.761,633,2.41,652,2.41,739,2.125,754,2.41,764,1.912,805,2.125,824,1.912,851,2.125,891,2.761,893,1.912,898,1.742,900,2.761,906,2.41,909,1.912,960,2.41,966,3.944,967,4.105,968,3.944,969,4.105,970,2.843,971,2.41,972,3.068,973,2.41,974,2.843,975,2.843,976,2.843,977,2.843,978,2.843,979,4.105,980,3.48,981,2.843,982,2.843,983,2.843,984,2.843,985,2.41,986,2.125,987,2.843,988,2.843,989,2.843,990,4.105,991,5.276,992,2.41,993,2.843,994,2.843,995,3.48,996,2.843,997,2.843,998,2.843,999,2.41,1000,2.41]],["title/additional-documentation/guide/2.-connecting-to-dom.html",[67,0.724,68,0.771,134,1.602,233,1.072,880,1.239]],["body/additional-documentation/guide/2.-connecting-to-dom.html",[21,1.398,24,0.025,27,0.686,29,0.015,30,0.015,33,0.936,35,1.33,36,1.222,57,1.51,67,1.67,68,1.78,80,1.398,81,1.502,82,1.905,83,1.417,88,2.113,93,1.306,101,1.617,115,1.323,117,1.222,137,1.502,150,1.007,153,3.709,166,1.905,170,3.27,176,1.073,177,1.398,178,1.617,180,2.835,184,2.942,185,3.405,189,1.75,195,1.905,199,2.146,200,2.463,203,1.398,204,1.455,206,2.681,210,1.838,212,2.159,213,1.905,219,2.113,225,1.144,232,1.398,242,1.398,243,1.905,244,1.502,256,2.091,258,2.523,259,2.681,269,2.113,293,1.968,300,0.945,301,1.75,304,1.64,309,1.75,310,1.398,328,2.942,344,2.091,356,1.75,361,2.942,378,1.905,379,2.323,380,2.323,382,2.323,394,1.398,400,1.75,423,1.905,427,1.249,463,1.905,467,2.091,475,2.681,504,1.905,522,1.905,526,2.091,528,1.75,540,2.942,597,2.091,756,2.323,773,2.323,786,2.323,883,2.635,890,2.323,942,2.635,962,3.709,968,3.27,1001,3.108,1002,4.375,1003,4.375,1004,4.375,1005,3.108,1006,3.108,1007,3.108,1008,4.375,1009,2.091,1010,3.108,1011,3.108,1012,4.375,1013,3.108,1014,3.108,1015,3.108,1016,3.108,1017,2.635,1018,3.108,1019,3.108,1020,3.108,1021,2.635,1022,3.108,1023,3.108,1024,2.635,1025,3.108,1026,3.108,1027,3.108]],["title/additional-documentation/guide/3.-monitoring-state.html",[97,0.68,116,1.001,233,1.072,865,1.459,880,1.239]],["body/additional-documentation/guide/3.-monitoring-state.html",[0,0.08,16,1.112,21,1.719,24,0.02,26,0.354,28,0.789,29,0.02,30,0.018,33,0.726,36,1.502,48,2.856,50,1.531,56,1.091,66,1.846,68,1.631,69,1.854,80,2.534,91,2.534,97,1.91,104,2.152,115,1.04,116,2.366,117,1.979,119,2.152,133,1.825,150,1.631,154,2.266,155,1.989,158,2.621,162,2.621,163,1.238,166,2.342,167,1.846,171,1.631,177,1.719,188,2.57,200,2.152,212,1.502,215,2.266,216,2.152,222,2.621,224,1.605,254,1.605,261,2.342,264,2.152,269,1.846,293,1.719,294,1.989,304,1.238,305,2.342,323,2.152,351,1.502,352,3.086,364,3.669,394,1.719,407,2.152,415,1.989,418,1.989,425,3.24,522,2.342,538,2.342,563,2.152,599,3.24,612,1.846,621,2.342,657,2.57,820,2.856,888,3.24,893,2.57,898,3.669,966,4.211,1009,2.57,1028,3.24,1029,3.24,1030,3.24,1031,3.821,1032,3.821,1033,3.821,1034,3.821,1035,3.821,1036,3.24,1037,3.24,1038,3.821,1039,3.24,1040,3.24,1041,3.821,1042,3.821,1043,3.821,1044,3.24]],["title/additional-documentation/chess-tutorial.html",[233,1.212,753,1.812,792,2.014,880,1.402]],["body/additional-documentation/chess-tutorial.html",[0,0.022,3,0.278,6,1.056,7,0.786,8,0.347,10,0.518,15,1.726,16,0.422,21,0.628,24,0.025,25,0.234,26,0.177,28,0.781,29,0.011,30,0.005,33,0.66,35,0.234,36,1.194,38,0.518,39,0.372,41,2.207,43,1.311,44,1.134,48,0.576,49,2.504,50,0.581,56,0.22,57,0.482,58,0.472,60,0.347,66,0.372,67,0.424,68,0.25,69,0.514,70,0.674,73,0.653,74,1.754,75,1.303,76,0.518,81,0.372,82,0.855,83,1.698,85,0.514,88,1.134,89,0.472,93,1.742,94,1.183,97,0.398,104,0.434,113,1.134,115,1.111,116,0.803,117,1.303,118,0.518,119,0.434,121,0.653,122,1.799,128,0.401,133,0.452,134,2.895,137,0.372,138,2.789,139,0.995,140,0.576,142,0.726,143,0.518,144,1.828,146,1.862,150,1.074,151,0.653,154,2.059,155,0.401,158,0.995,162,1.581,163,0.25,165,1.221,167,1.134,168,0.576,170,2.271,171,1.698,175,0.434,177,1.7,178,0.401,180,1.056,185,1.286,189,0.786,192,1.183,199,0.452,200,0.786,203,0.628,204,0.764,206,2.183,210,0.986,212,1.846,213,0.472,215,0.628,217,1.468,218,0.576,219,0.674,220,1.754,222,0.401,223,2.97,224,0.986,225,0.284,226,0.653,228,0.653,232,0.86,233,0.347,234,1.438,237,0.653,241,1.429,242,1.492,243,0.855,244,0.372,245,0.653,246,1.754,250,0.653,253,0.786,254,0.324,256,0.518,258,0.324,259,0.855,262,1.286,263,1.043,264,0.434,267,1.828,269,0.924,271,1.535,275,1.414,279,0.855,284,0.86,293,0.628,295,0.347,303,0.628,307,1.828,310,0.628,318,0.855,320,1.286,321,2.158,322,0.653,324,1.043,325,0.472,327,1.754,328,0.939,330,1.183,334,0.653,335,1.043,340,1.043,343,0.726,344,0.939,346,1.621,351,0.548,353,1.286,356,0.786,359,0.786,361,0.518,362,0.653,364,0.472,367,0.518,374,0.518,375,0.472,376,0.576,378,2.032,379,0.576,380,0.576,382,0.576,391,0.86,394,0.347,398,0.576,414,0.726,415,0.401,417,0.653,418,1.854,421,0.653,422,1.754,423,2.032,427,1.079,430,0.576,435,1.414,436,0.518,439,0.518,442,0.472,457,0.653,460,0.518,461,0.653,462,0.518,463,0.472,472,1.438,473,0.472,475,0.472,490,1.043,500,0.653,503,0.653,504,1.438,505,1.183,507,1.043,509,2.304,510,0.653,511,0.653,513,0.653,515,1.666,522,1.172,528,0.434,530,1.043,534,3.918,536,0.653,538,0.472,540,0.518,544,0.995,546,0.576,558,0.576,577,0.518,580,0.653,581,3.667,610,3.88,611,3.981,612,0.674,614,0.518,621,1.438,622,1.603,625,0.518,653,1.043,660,3.649,707,2.812,739,0.576,741,2.304,747,0.653,752,0.576,753,1.579,756,1.754,758,1.183,764,0.518,767,0.576,773,0.576,783,0.653,785,0.518,786,2.032,787,0.576,789,1.183,792,2.663,794,1.621,802,0.653,805,0.576,808,0.576,824,0.518,827,0.472,831,1.429,837,0.653,844,0.653,857,0.576,865,1.172,882,0.576,884,0.653,890,0.576,891,2.043,893,0.518,894,0.653,898,1.666,900,0.939,904,0.653,908,3.204,909,2.231,910,2.304,911,1.579,912,1.043,916,1.621,921,0.653,946,0.576,956,1.043,959,1.183,966,1.043,968,2.032,971,1.183,972,1.754,973,1.99,980,0.653,985,3.368,986,0.576,995,0.653,999,1.621,1000,0.653,1009,0.939,1017,0.653,1021,1.183,1024,0.653,1028,0.653,1029,0.653,1030,0.653,1036,1.183,1037,0.653,1040,0.653,1044,0.653,1045,0.771,1046,3.317,1047,5.929,1048,1.395,1049,0.771,1050,4.147,1051,1.395,1052,3.562,1053,4.304,1054,2.347,1055,5.166,1056,3.562,1057,1.912,1058,1.912,1059,0.771,1060,1.621,1061,1.912,1062,1.912,1063,0.771,1064,0.771,1065,0.771,1066,0.771,1067,1.912,1068,0.771,1069,0.771,1070,2.347,1071,1.395,1072,0.771,1073,1.395,1074,1.395,1075,3.973,1076,0.771,1077,0.771,1078,1.395,1079,1.912,1080,0.771,1081,0.771,1082,0.771,1083,0.771,1084,0.771,1085,0.771,1086,0.771,1087,1.395,1088,0.771,1089,1.912,1090,1.912,1091,1.395,1092,0.771,1093,0.771,1094,1.395,1095,1.395,1096,0.771,1097,0.771,1098,0.771,1099,1.395,1100,1.395,1101,0.771,1102,0.771,1103,0.771,1104,0.771,1105,1.912,1106,2.718,1107,3.038,1108,0.771,1109,0.771,1110,2.347,1111,0.771,1112,0.771,1113,1.395,1114,0.771,1115,0.771,1116,1.395,1117,2.718,1118,0.771,1119,0.771,1120,0.771,1121,1.395,1122,2.718,1123,1.621,1124,0.771,1125,0.771,1126,0.771,1127,0.771,1128,0.771,1129,0.771,1130,1.395,1131,1.395,1132,0.771,1133,0.771,1134,0.771,1135,0.771,1136,0.771,1137,0.771,1138,0.771,1139,0.771,1140,1.395,1141,0.771,1142,5.086,1143,0.771,1144,0.771,1145,0.771,1146,1.395,1147,0.771,1148,1.395,1149,0.771,1150,0.771,1151,0.771,1152,0.771,1153,3.038,1154,1.99,1155,0.653,1156,0.771,1157,0.771,1158,3.779,1159,2.718,1160,0.771,1161,0.771,1162,0.771,1163,0.771,1164,0.771,1165,1.395,1166,1.183,1167,0.771,1168,0.771,1169,0.771,1170,0.771,1171,0.771,1172,1.395,1173,1.395,1174,1.395,1175,0.771,1176,0.771,1177,1.395,1178,0.771,1179,0.771,1180,0.771,1181,0.771,1182,0.771,1183,0.771,1184,0.771,1185,0.771,1186,0.771,1187,1.621,1188,0.771,1189,0.771,1190,1.395,1191,0.771,1192,0.771,1193,1.395,1194,1.395,1195,0.771,1196,1.395,1197,1.912,1198,0.771,1199,1.395,1200,0.771,1201,1.395,1202,0.771,1203,0.771,1204,0.771,1205,0.771,1206,0.771,1207,0.771,1208,1.395,1209,1.395,1210,0.771,1211,1.395,1212,0.771,1213,0.771,1214,0.771,1215,1.395,1216,0.771,1217,1.395,1218,1.395,1219,0.771,1220,0.771,1221,0.771,1222,0.771,1223,0.771,1224,0.771,1225,1.395,1226,0.771,1227,0.771,1228,0.771,1229,0.771,1230,0.771,1231,1.99,1232,0.771,1233,1.912,1234,0.771,1235,0.771,1236,1.912,1237,0.771,1238,0.771,1239,0.771,1240,0.771,1241,0.771,1242,1.395,1243,0.771,1244,0.771,1245,1.395,1246,0.653,1247,0.771,1248,0.771,1249,0.771,1250,0.771,1251,0.771,1252,0.653,1253,0.771,1254,0.771,1255,0.771,1256,0.771,1257,0.771,1258,0.771,1259,0.771,1260,0.771,1261,0.771,1262,0.771,1263,0.771,1264,0.771,1265,2.718,1266,0.771,1267,1.395,1268,1.912,1269,1.395,1270,0.771,1271,0.771,1272,0.771,1273,0.771,1274,0.771,1275,0.771,1276,0.771,1277,0.771,1278,0.771,1279,0.771,1280,0.771,1281,0.771,1282,0.771,1283,0.771,1284,0.771,1285,0.771,1286,1.395,1287,1.395,1288,0.771,1289,0.771,1290,0.771,1291,0.771,1292,0.771,1293,0.771,1294,0.771,1295,0.771,1296,0.771,1297,0.771,1298,0.771,1299,0.771,1300,0.771,1301,0.771,1302,0.771,1303,0.771,1304,0.771,1305,0.771,1306,0.771,1307,0.771,1308,2.718,1309,0.771,1310,0.771,1311,0.771,1312,0.771,1313,1.395,1314,0.771,1315,1.912,1316,0.771,1317,0.771,1318,0.771,1319,0.771]],["title/additional-documentation/translating-react-code.html",[137,1.15,139,1.239,233,1.072,325,1.459,880,1.239]],["body/additional-documentation/translating-react-code.html",[0,0.028,8,1.261,16,0.382,17,0.68,21,1.59,24,0.025,26,0.377,28,0.839,29,0.01,30,0.01,33,0.756,38,1.164,41,0.779,43,2.28,44,1.354,49,1.579,50,1.531,56,0.8,57,1.22,58,2.736,60,0.779,61,2.437,66,0.836,67,1.453,68,1.964,69,1.032,74,2.642,75,1.102,76,1.164,80,2.009,85,0.637,88,0.836,89,1.06,91,2.009,93,0.727,97,1.546,101,0.9,102,1.467,103,1.06,104,1.579,113,2.803,115,0.987,116,1.178,117,1.389,122,2.06,123,1.467,125,1.293,126,1.293,129,1.459,133,1.447,134,1.164,137,3.043,138,1.164,139,2.324,140,3.338,142,2.115,143,1.886,150,0.561,154,2.009,157,1.59,158,1.839,159,1.467,160,1.467,162,1.459,163,0.561,165,0.9,167,0.836,171,2.024,175,0.974,176,0.597,177,0.779,182,1.293,194,1.164,197,1.293,198,1.467,199,0.908,203,0.779,204,0.705,210,1.707,212,1.755,219,1.354,220,2.096,222,0.9,224,0.727,225,0.637,232,0.779,242,2.151,248,2.733,253,0.974,254,1.178,259,1.06,261,1.06,264,0.974,267,1.164,268,1.467,269,2.532,271,1.22,283,1.06,284,0.779,293,0.779,296,0.836,300,1.236,303,0.779,304,0.908,305,1.718,310,1.59,319,1.164,321,0.9,325,2.49,339,2.115,343,0.9,353,1.164,356,1.579,359,0.974,364,2.166,366,1.467,369,1.467,370,2.996,372,1.293,375,1.06,378,1.06,391,1.261,392,1.164,397,1.293,399,1.467,418,1.459,426,1.467,428,1.718,435,0.9,459,1.293,460,1.886,464,1.293,472,2.49,473,1.06,475,1.718,490,1.293,504,1.06,507,2.096,528,2.514,530,1.293,544,1.459,550,1.06,558,1.293,577,1.164,581,2.096,614,1.164,622,1.59,640,1.467,643,2.996,644,1.293,657,1.886,760,2.377,767,1.293,785,1.164,808,1.293,827,2.166,831,1.293,845,1.467,852,1.467,865,1.06,870,1.164,879,1.467,882,1.293,891,3.215,897,1.467,898,1.718,900,2.377,909,1.164,911,2.377,931,1.467,946,1.293,948,2.377,955,2.377,956,1.293,958,1.467,972,1.293,986,2.096,992,1.467,1009,1.164,1039,1.467,1060,1.467,1123,2.377,1154,1.467,1155,1.467,1166,2.377,1187,2.377,1231,1.467,1246,1.467,1252,1.467,1320,1.73,1321,1.73,1322,1.73,1323,1.73,1324,1.73,1325,1.73,1326,1.73,1327,1.73,1328,1.73,1329,1.73,1330,1.73,1331,2.804,1332,5.9,1333,4.78,1334,1.73,1335,1.73,1336,1.73,1337,2.804,1338,2.804,1339,1.73,1340,1.73,1341,1.73,1342,1.73,1343,1.73,1344,1.73,1345,1.73,1346,1.73,1347,1.73,1348,1.73,1349,1.73,1350,1.73,1351,2.804,1352,2.804,1353,1.73,1354,3.534,1355,2.804,1356,1.73,1357,1.73,1358,1.73,1359,1.73,1360,1.73,1361,2.804,1362,1.73,1363,1.73,1364,1.73,1365,1.73,1366,1.73,1367,1.73,1368,1.73,1369,1.73,1370,1.73,1371,1.73,1372,1.73,1373,1.73,1374,1.73,1375,1.73,1376,1.73,1377,1.73,1378,1.73,1379,1.73,1380,1.73,1381,1.73,1382,1.73,1383,1.73,1384,1.73,1385,1.73,1386,1.73,1387,2.804,1388,1.73,1389,1.73,1390,1.73,1391,1.73,1392,1.73]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["0",{"_index":320,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"coverage.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0..63",{"_index":1145,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.25",{"_index":1255,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.5",{"_index":322,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0.8.14",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":321,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"injectables/SkyhookDndService.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["1/1",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":660,"title":{},"body":{"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["12.5",{"_index":1131,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["19",{"_index":866,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":1127,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["2",{"_index":134,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["2/2",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":811,"title":{},"body":{"index.html":{}}}],["3",{"_index":865,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["3/3",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1231,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["4.0.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1072,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5",{"_index":1154,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["5.0.0",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["5.5",{"_index":1295,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5.5.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["54px",{"_index":1073,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["560px",{"_index":1135,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["6",{"_index":1381,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["6/6",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1057,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["700",{"_index":1241,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["70px",{"_index":1076,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8",{"_index":1148,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8/8",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["8x8",{"_index":1121,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abov",{"_index":58,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["abramov",{"_index":744,"title":{},"body":{"index.html":{}}}],["absolut",{"_index":1116,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abstract",{"_index":748,"title":{},"body":{"index.html":{}}}],["accept",{"_index":905,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["access",{"_index":1039,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["accessor",{"_index":288,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"directives/DropTargetDirective.html":{}}}],["accomplish",{"_index":1355,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["achiev",{"_index":1096,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["action",{"_index":468,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["actual",{"_index":808,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ad",{"_index":882,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["add",{"_index":15,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"classes/DragLayerConnectionClass.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add(teardown",{"_index":71,"title":{},"body":{"interfaces/ConnectionBase.html":{},"classes/DragLayerConnectionClass.html":{}}}],["add(teardownlog",{"_index":19,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["addit",{"_index":880,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}},"body":{}}],["addsubscript",{"_index":1,"title":{"interfaces/AddSubscription.html":{}},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["advanc",{"_index":960,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["advic",{"_index":235,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["affect",{"_index":1092,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["again",{"_index":888,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alias",{"_index":868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1108,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allow",{"_index":303,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alreadi",{"_index":343,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alt",{"_index":496,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["altern",{"_index":820,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alway",{"_index":1021,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ambiti",{"_index":790,"title":{},"body":{"index.html":{}}}],["amend",{"_index":1196,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anchori",{"_index":314,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["anchorx",{"_index":313,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["angular",{"_index":43,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["angular'",{"_index":1093,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["angular/cor",{"_index":707,"title":{},"body":{"dependencies.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anoth",{"_index":540,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["answer",{"_index":1227,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anyth",{"_index":256,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anyway",{"_index":545,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["aot",{"_index":55,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["api",{"_index":760,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["app",{"_index":910,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["app.module.t",{"_index":937,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["appear",{"_index":546,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["appearance—even",{"_index":535,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["appli",{"_index":344,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["appmodul",{"_index":887,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["approach",{"_index":1359,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["appropri",{"_index":644,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["arbitrari",{"_index":1389,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["arbitrarili",{"_index":1102,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["area",{"_index":799,"title":{},"body":{"index.html":{}}}],["arecollectsequ",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arecollectsequal(a",{"_index":723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["areoptionsequ",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["areoptionsequal(nextopt",{"_index":725,"title":{},"body":{"miscellaneous/functions.html":{}}}],["argument",{"_index":643,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["around",{"_index":170,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array",{"_index":824,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array(64).fill(0).map((_",{"_index":1120,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arrow",{"_index":948,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["ask",{"_index":265,"title":{},"body":{"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{}}}],["aspect",{"_index":776,"title":{},"body":{"index.html":{}}}],["assembl",{"_index":923,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["assign",{"_index":489,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["associ",{"_index":1379,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["assum",{"_index":1058,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assumpt",{"_index":1260,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["async",{"_index":1029,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["asynchron",{"_index":1387,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["attach",{"_index":968,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attent",{"_index":1112,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["automat",{"_index":257,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["avail",{"_index":215,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["avoid",{"_index":512,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["awar",{"_index":1363,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["axi",{"_index":777,"title":{},"body":{"index.html":{}}}],["b",{"_index":724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["backend",{"_index":35,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backend';gener",{"_index":934,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["backendfactori",{"_index":46,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["backendfactoryinput",{"_index":31,"title":{"interfaces/BackendFactoryInput.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"coverage.html":{}}}],["backendinput",{"_index":59,"title":{"interfaces/BackendInput.html":{}},"body":{"interfaces/BackendInput.html":{},"coverage.html":{}}}],["backendnext",{"_index":751,"title":{},"body":{"index.html":{}}}],["backendy",{"_index":881,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["background",{"_index":1080,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["backgroundcolor",{"_index":1089,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bare",{"_index":821,"title":{},"body":{"index.html":{}}}],["base",{"_index":66,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["base.t",{"_index":596,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["basic",{"_index":1060,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bbb",{"_index":1186,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["be",{"_index":219,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["becom",{"_index":190,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{}}}],["befor",{"_index":38,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["begindrag",{"_index":475,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["begindrag(monitor",{"_index":501,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["behaviorsubject",{"_index":1159,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["behaviour",{"_index":550,"title":{},"body":{"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["behavioursubject",{"_index":1167,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["belong",{"_index":847,"title":{},"body":{"index.html":{}}}],["below",{"_index":1006,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["benefit",{"_index":854,"title":{},"body":{"index.html":{}}}],["best",{"_index":481,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["better",{"_index":1177,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["between",{"_index":319,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["beyond",{"_index":981,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["bg",{"_index":1308,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["big",{"_index":1104,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["biggest",{"_index":1350,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["bind",{"_index":404,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["bit",{"_index":1225,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["black",{"_index":1053,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blindli",{"_index":416,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["block",{"_index":786,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["board",{"_index":534,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["boardcompon",{"_index":1056,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boardsquarecompon",{"_index":1265,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bodi",{"_index":1085,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boilerpl",{"_index":1163,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bone",{"_index":822,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":299,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{}}}],["boolean;then",{"_index":1086,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bootstrap",{"_index":615,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}],["border",{"_index":1126,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["born",{"_index":840,"title":{},"body":{"index.html":{}}}],["both",{"_index":473,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bottom",{"_index":336,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["bound",{"_index":153,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["box",{"_index":1012,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["break",{"_index":1048,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["brevity'",{"_index":1133,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broadcast",{"_index":1164,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broken",{"_index":406,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["brows",{"_index":863,"title":{},"body":{"modules.html":{},"additional-documentation/quickstart.html":{}}}],["browser",{"_index":462,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"modules.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["bsd",{"_index":861,"title":{},"body":{"index.html":{}}}],["bug",{"_index":846,"title":{},"body":{"index.html":{}}}],["build",{"_index":741,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["builder",{"_index":815,"title":{},"body":{"index.html":{}}}],["c.candrop",{"_index":1304,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["c.isdrag",{"_index":156,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["c.isov",{"_index":1303,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cad",{"_index":812,"title":{},"body":{"index.html":{}}}],["call",{"_index":163,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["callback",{"_index":80,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["came",{"_index":1259,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["can't",{"_index":946,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["candrag",{"_index":410,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["candrag(monitor",{"_index":517,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["candrop",{"_index":146,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["candrop(monitor",{"_index":578,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["canmoveknight",{"_index":1197,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["canmoveknight(to",{"_index":1203,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["capturedraggingst",{"_index":315,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{}}}],["card",{"_index":532,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["carri",{"_index":1040,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["case",{"_index":148,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["center",{"_index":1109,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["certain",{"_index":181,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["chain",{"_index":432,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["chang",{"_index":117,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["charact",{"_index":1069,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["check",{"_index":128,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chess",{"_index":792,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chessboard",{"_index":1139,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["child",{"_index":439,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["choos",{"_index":164,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["circumst",{"_index":480,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["class",{"_index":271,"title":{"classes/DragLayerConnectionClass.html":{},"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{}},"body":{"classes/DragLayerConnectionClass.html":{},"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["clean",{"_index":632,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["clearer",{"_index":1189,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["clearli",{"_index":1152,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["click",{"_index":916,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["client",{"_index":266,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["close",{"_index":289,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["cluster_skyhookdndmodul",{"_index":616,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}],["cluster_skyhookdndmodule_declar",{"_index":617,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}],["cluster_skyhookdndmodule_export",{"_index":618,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}],["code",{"_index":139,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["codebas",{"_index":848,"title":{},"body":{"index.html":{}}}],["coll",{"_index":1307,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["collect",{"_index":140,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["collect((prop",{"_index":1367,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["color",{"_index":1090,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["colour",{"_index":1079,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["column",{"_index":1129,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["combin",{"_index":1370,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["come",{"_index":1366,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["commenc",{"_index":899,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["commit",{"_index":1062,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["common",{"_index":597,"title":{},"body":{"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["commun",{"_index":853,"title":{},"body":{"index.html":{}}}],["compar",{"_index":1328,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compat",{"_index":11,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["complet",{"_index":785,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["complex",{"_index":742,"title":{},"body":{"index.html":{}}}],["compon",{"_index":171,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["component'",{"_index":397,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["component.fireaction(monitor.getitem",{"_index":1335,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compos",{"_index":1356,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comprehens",{"_index":957,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["comput",{"_index":1218,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concept",{"_index":897,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["conceptu",{"_index":1249,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concern",{"_index":1103,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["configur",{"_index":37,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["confus",{"_index":558,"title":{},"body":{"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect",{"_index":68,"title":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect.connectdragsourc",{"_index":1337,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview",{"_index":369,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview(elementornod",{"_index":373,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragsourc",{"_index":370,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragsource(elementornod",{"_index":386,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdroptarget",{"_index":551,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connectdroptarget(elementornod",{"_index":552,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connection'",{"_index":963,"title":{},"body":{"additional-documentation/guide.html":{}}}],["connection.t",{"_index":274,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"coverage.html":{}}}],["connection.unsubscrib",{"_index":624,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["connectionbas",{"_index":63,"title":{"interfaces/ConnectionBase.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["connectionbase.unsubscrib",{"_index":1360,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectionfactori",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["connectionfactory(factoryarg",{"_index":728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connector",{"_index":1380,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["consid",{"_index":526,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["const",{"_index":378,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["constant",{"_index":1233,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants.t",{"_index":1235,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constraint",{"_index":778,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":279,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["constructor(manag",{"_index":280,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{}}}],["constructor(priv",{"_index":972,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["consum",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":14,"title":{},"body":{"interfaces/AddSubscription.html":{},"index.html":{}}}],["containercompon",{"_index":1136,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["content",{"_index":425,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["contributor",{"_index":849,"title":{},"body":{"index.html":{}}}],["conveni",{"_index":79,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["convert",{"_index":1144,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cooki",{"_index":829,"title":{},"body":{"index.html":{}}}],["cool",{"_index":1124,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord",{"_index":1142,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord.t",{"_index":1143,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coordin",{"_index":263,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["copi",{"_index":459,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["core",{"_index":704,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["core'",{"_index":114,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["corollari",{"_index":641,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["correctli",{"_index":935,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["correspond",{"_index":465,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["coupl",{"_index":514,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["cours",{"_index":1325,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["cover",{"_index":761,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":656,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":210,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["createbackend",{"_index":924,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["createconnector",{"_index":591,"title":{},"body":{"interfaces/FactoryArgs.html":{}}}],["createdefaultmultibackend",{"_index":42,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["createhandl",{"_index":592,"title":{},"body":{"interfaces/FactoryArgs.html":{}}}],["createmonitor",{"_index":593,"title":{},"body":{"interfaces/FactoryArgs.html":{}}}],["createsourceconnector",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsourceconnector(backend",{"_index":731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsourcefactori",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsourcefactory(spec",{"_index":732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsourcemonitor",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsourcemonitor(manag",{"_index":733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtargetconnector",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtargetconnector(backend",{"_index":734,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtargetfactori",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtargetfactory(spec",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtargetmonitor",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtargetmonitor(manag",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtouchbackend",{"_index":51,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["css",{"_index":756,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["current",{"_index":222,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["currentopt",{"_index":726,"title":{},"body":{"miscellaneous/functions.html":{}}}],["currentposit",{"_index":1199,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cursor",{"_index":361,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["custom",{"_index":189,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["customis",{"_index":457,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["cutter",{"_index":830,"title":{},"body":{"index.html":{}}}],["dan",{"_index":743,"title":{},"body":{"index.html":{}}}],["data",{"_index":201,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["data:image/png;base64",{"_index":1314,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dead",{"_index":1237,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["deadlin",{"_index":834,"title":{},"body":{"index.html":{}}}],["decis",{"_index":1038,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["declar",{"_index":614,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["decor",{"_index":1354,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decreas",{"_index":345,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["deep",{"_index":1098,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["default",{"_index":176,"title":{},"body":{"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["defer",{"_index":1391,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["defin",{"_index":414,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["definit",{"_index":936,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["degrad",{"_index":549,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["delet",{"_index":795,"title":{},"body":{"index.html":{}}}],["demo",{"_index":956,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["demonstr",{"_index":818,"title":{},"body":{"index.html":{}}}],["depend",{"_index":224,"title":{"dependencies.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["deriv",{"_index":1032,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["describ",{"_index":503,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["descript",{"_index":5,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{}}}],["design",{"_index":209,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{}}}],["desir",{"_index":349,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["desktop",{"_index":917,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["destroy",{"_index":103,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["destroy.unsubscrib",{"_index":631,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["destruct",{"_index":469,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["detail",{"_index":524,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["detect",{"_index":541,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["determin",{"_index":519,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["devic",{"_index":915,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["diagram",{"_index":809,"title":{},"body":{"index.html":{}}}],["diddrop",{"_index":411,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{}}}],["differ",{"_index":269,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["difficult",{"_index":1278,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["direct",{"_index":300,"title":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["directli",{"_index":375,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["disappear",{"_index":1228,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["discov",{"_index":1023,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["discuss",{"_index":577,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dispatch",{"_index":433,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["displac",{"_index":601,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["display",{"_index":246,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["distinctuntilchang",{"_index":127,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["div",{"_index":1106,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dnd",{"_index":113,"title":{},"body":{"interfaces/ConnectionBase.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dnd'",{"_index":642,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["dnd.dragsource(\"item",{"_index":1343,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dndservice.droptarget(typ",{"_index":96,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["do",{"_index":513,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["doc",{"_index":268,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["dock",{"_index":329,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["document",{"_index":657,"title":{},"body":{"coverage.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["doesn't",{"_index":359,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dom",{"_index":67,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["don't",{"_index":167,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["done",{"_index":986,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["down",{"_index":805,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drag",{"_index":115,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["drag/drop",{"_index":788,"title":{},"body":{"index.html":{}}}],["drag/listen",{"_index":645,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["drag_drop_backend",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_manag",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dragdropmanag",{"_index":281,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"miscellaneous/variables.html":{}}}],["dragdropmonitor",{"_index":455,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{}}}],["draggabl",{"_index":259,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["draglay",{"_index":174,"title":{"interfaces/DragLayer.html":{}},"body":{"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["draglayer(subscript",{"_index":639,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["draglayer.listen",{"_index":214,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["draglayerconnectionclass",{"_index":272,"title":{"classes/DragLayerConnectionClass.html":{}},"body":{"classes/DragLayerConnectionClass.html":{},"coverage.html":{}}}],["draglayermonitor",{"_index":216,"title":{"interfaces/DragLayerMonitor.html":{}},"body":{"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragpreview",{"_index":308,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["dragpreview]=\"sourc",{"_index":1008,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewdirect",{"_index":301,"title":{"directives/DragPreviewDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewopt",{"_index":309,"title":{"interfaces/DragPreviewOptions.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourc",{"_index":304,"title":{"interfaces/DragSource.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource'",{"_index":409,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["dragsource(\"item",{"_index":1336,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource(typ",{"_index":640,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.connectdragpreview",{"_index":1027,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource.listen",{"_index":1252,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.settyp",{"_index":1392,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"itemsourc",{"_index":1378,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"sourc",{"_index":1019,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcedirect",{"_index":400,"title":{"directives/DragSourceDirective.html":{}},"body":{"directives/DragSourceDirective.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcemonitor",{"_index":407,"title":{"interfaces/DragSourceMonitor.html":{}},"body":{"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragsourcemonitor.id",{"_index":527,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dragsourcemonitor.isdrag",{"_index":1253,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dragsourcemonitorclass",{"_index":443,"title":{"classes/DragSourceMonitorClass.html":{}},"body":{"classes/DragSourceMonitorClass.html":{},"coverage.html":{}}}],["dragsourceopt",{"_index":387,"title":{"interfaces/DragSourceOptions.html":{}},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["dragsourcespec",{"_index":395,"title":{"interfaces/DragSourceSpec.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["dragsourcespec.begindrag",{"_index":247,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dragsourcetyp",{"_index":401,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["dragula",{"_index":833,"title":{},"body":{"index.html":{}}}],["draw",{"_index":810,"title":{},"body":{"index.html":{}}}],["drill",{"_index":804,"title":{},"body":{"index.html":{}}}],["drive",{"_index":1156,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["drop",{"_index":83,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drop(monitor",{"_index":579,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["dropeffect",{"_index":458,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["dropresult",{"_index":440,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["droptarget",{"_index":363,"title":{"interfaces/DropTarget.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["droptarget'",{"_index":565,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["droptarget(typ",{"_index":651,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["droptarget.listen",{"_index":1291,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetdirect",{"_index":555,"title":{"directives/DropTargetDirective.html":{}},"body":{"directives/DropTargetDirective.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{},"overview.html":{}}}],["droptargetmonitor",{"_index":563,"title":{"interfaces/DropTargetMonitor.html":{}},"body":{"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptargetmonitor.candrop",{"_index":1292,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitor.isov",{"_index":1293,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitorclass",{"_index":572,"title":{"classes/DropTargetMonitorClass.html":{}},"body":{"classes/DropTargetMonitorClass.html":{},"coverage.html":{}}}],["droptargetspec",{"_index":78,"title":{"interfaces/DropTargetSpec.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["droptargetspec.candrop",{"_index":1270,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec.drop",{"_index":1044,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargettyp",{"_index":556,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["dt",{"_index":95,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dt.add(subj.pip",{"_index":105,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dumb",{"_index":239,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duplic",{"_index":231,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["durat",{"_index":86,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dure",{"_index":488,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dx",{"_index":1204,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dy",{"_index":1206,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dynam",{"_index":392,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["e.g",{"_index":1014,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["each",{"_index":898,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["earlier",{"_index":1290,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["easi",{"_index":623,"title":{},"body":{"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["easili",{"_index":376,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{}}}],["editor",{"_index":961,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["effect",{"_index":236,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["effici",{"_index":1368,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["element",{"_index":199,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["element'",{"_index":1001,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["elementornod",{"_index":384,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["elementref",{"_index":1377,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["elementref.nativeel",{"_index":377,"title":{},"body":{"interfaces/DragSource.html":{}}}],["elsewher",{"_index":1155,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["emit",{"_index":904,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["empti",{"_index":358,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["emul",{"_index":136,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["enabl",{"_index":928,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enabled/dis",{"_index":419,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["enablemouseev",{"_index":52,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["encapsul",{"_index":1095,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["encount",{"_index":940,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["end",{"_index":207,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["enddrag",{"_index":428,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["enddrag(monitor",{"_index":521,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["enough",{"_index":1100,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["entir",{"_index":1036,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["equal",{"_index":130,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["erasedto",{"_index":208,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ergonom",{"_index":782,"title":{},"body":{"index.html":{}}}],["error",{"_index":939,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["es6",{"_index":1385,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["especi",{"_index":996,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["essenti",{"_index":120,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["etc",{"_index":1374,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["even",{"_index":253,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["event",{"_index":244,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["everyth",{"_index":992,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["exactli",{"_index":1171,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exampl",{"_index":61,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["except",{"_index":1229,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["execut",{"_index":1211,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exist",{"_index":173,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["exit",{"_index":84,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["expect",{"_index":486,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["experi",{"_index":548,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["explicitli",{"_index":437,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["export",{"_index":49,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"modules/SkyhookDndModule.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["express",{"_index":1140,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["extend",{"_index":17,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["extra",{"_index":490,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["fact",{"_index":839,"title":{},"body":{"index.html":{}}}],["factory.t",{"_index":590,"title":{},"body":{"interfaces/FactoryArgs.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["factoryarg",{"_index":588,"title":{"interfaces/FactoryArgs.html":{}},"body":{"interfaces/FactoryArgs.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fairli",{"_index":1324,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fals",{"_index":53,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":1059,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["famou",{"_index":806,"title":{},"body":{"index.html":{}}}],["fanci",{"_index":1181,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["far",{"_index":1373,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["faster",{"_index":835,"title":{},"body":{"index.html":{}}}],["featur",{"_index":463,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["few",{"_index":802,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["figur",{"_index":1283,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["file",{"_index":3,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["find",{"_index":837,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["finish",{"_index":1063,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["fire",{"_index":166,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["fireact",{"_index":1340,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fireaction(item",{"_index":1346,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["first",{"_index":971,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["five",{"_index":1358,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fix",{"_index":226,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["flag",{"_index":420,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["flight",{"_index":1250,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["float",{"_index":1232,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["flow",{"_index":202,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["focus",{"_index":775,"title":{},"body":{"index.html":{}}}],["folder",{"_index":801,"title":{},"body":{"index.html":{}}}],["follow",{"_index":88,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["font",{"_index":1070,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["foreground",{"_index":1081,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["forget",{"_index":628,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["form",{"_index":1007,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["forroot",{"_index":886,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["forrootto",{"_index":892,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["found",{"_index":845,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["four",{"_index":1061,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["free",{"_index":1369,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["frequent",{"_index":587,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["fresh",{"_index":1151,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["friendli",{"_index":907,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["function",{"_index":50,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/FactoryArgs.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["funki",{"_index":1318,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["game",{"_index":1046,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservic",{"_index":1158,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.canmoveknight",{"_index":1219,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.moveknight",{"_index":1190,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gener",{"_index":260,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide.html":{}}}],["get",{"_index":538,"title":{"index.html":{}},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["getclientoffset",{"_index":447,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getclos",{"_index":290,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["getdifferencefrominitialoffset",{"_index":448,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getdropresult",{"_index":412,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{}}}],["gethandlerid",{"_index":371,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["getinitialclientoffset",{"_index":449,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getinitialsourceclientoffset",{"_index":450,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getitem",{"_index":451,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getitemtyp",{"_index":452,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getsourceclientoffset",{"_index":453,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/MonitorBase.html":{}}}],["getstyl",{"_index":1087,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gif",{"_index":819,"title":{},"body":{"index.html":{}}}],["github",{"_index":857,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["give",{"_index":767,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["given",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glanc",{"_index":1248,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["global",{"_index":197,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["gme",{"_index":1276,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["go",{"_index":581,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["goal",{"_index":766,"title":{},"body":{"index.html":{}}}],["good",{"_index":515,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["grab",{"_index":1022,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["graphic",{"_index":814,"title":{},"body":{"index.html":{}}}],["green",{"_index":1287,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["greenplu",{"_index":499,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["grid",{"_index":1122,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["group",{"_index":152,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["guid",{"_index":912,"title":{"additional-documentation/guide.html":{}},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["guidanc",{"_index":1277,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["habit",{"_index":636,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["handl",{"_index":258,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["handler",{"_index":1216,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick",{"_index":1210,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick(po",{"_index":1193,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hang",{"_index":169,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["happen",{"_index":789,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["happili",{"_index":135,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["hard",{"_index":511,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["have",{"_index":627,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["head",{"_index":930,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["heavi",{"_index":1271,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["height",{"_index":1075,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["help",{"_index":852,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["here",{"_index":544,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["here'",{"_index":1187,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["hide",{"_index":355,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["higher",{"_index":1351,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["highlight",{"_index":1043,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hinder",{"_index":1035,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hint",{"_index":466,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["hoist",{"_index":646,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["hold",{"_index":1141,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hook",{"_index":653,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["horizont",{"_index":326,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["hors",{"_index":1319,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["host",{"_index":1105,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hover",{"_index":81,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hover(monitor",{"_index":586,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["html",{"_index":1084,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["html5",{"_index":178,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["html5backend",{"_index":62,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["html5dropresult",{"_index":492,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["http",{"_index":1316,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["icon",{"_index":500,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["id",{"_index":251,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["idea",{"_index":516,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ident",{"_index":1289,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["identifi",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":354,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["ie11",{"_index":405,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["illeg",{"_index":1214,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["illustr",{"_index":1327,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["imag",{"_index":185,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["imagin",{"_index":1383,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["imaginari",{"_index":933,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["img",{"_index":379,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.onload",{"_index":380,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.src",{"_index":382,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["immedi",{"_index":338,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{}}}],["implement",{"_index":275,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["import",{"_index":41,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["improv",{"_index":856,"title":{},"body":{"index.html":{}}}],["includ",{"_index":262,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["incorpor",{"_index":1269,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["independ",{"_index":1137,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":1146,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["infer",{"_index":479,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{}}}],["inform",{"_index":364,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["initi",{"_index":442,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["inject",{"_index":622,"title":{"injectables/SkyhookDndService.html":{}},"body":{"injectables/SkyhookDndService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["injectiontoken",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":242,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["insid",{"_index":293,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inspir",{"_index":901,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["instal",{"_index":749,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["instanc",{"_index":893,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["instead",{"_index":339,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["instruct",{"_index":943,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["interact",{"_index":243,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interact.j",{"_index":774,"title":{},"body":{"index.html":{}}}],["interest",{"_index":1166,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["intern",{"_index":76,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["internalmonitor",{"_index":445,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{}}}],["interpol",{"_index":331,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["introduc",{"_index":1179,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["isblack",{"_index":1150,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["iscallingcandrag",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iscallingcandrop",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iscallingisdrag",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdrag",{"_index":142,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["isdragging(monitor",{"_index":525,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ish.t",{"_index":607,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isn't",{"_index":417,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isov",{"_index":144,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover(opt",{"_index":566,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{}}}],["issu",{"_index":843,"title":{},"body":{"index.html":{}}}],["istick",{"_index":276,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["it'",{"_index":504,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["item",{"_index":225,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["item'",{"_index":602,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["itemsourc",{"_index":1342,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemsourcespec",{"_index":1331,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemtyp",{"_index":1236,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itemtypes.knight",{"_index":1238,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itself",{"_index":48,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["javascript",{"_index":502,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["job",{"_index":1010,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["jqueri",{"_index":772,"title":{},"body":{"index.html":{}}}],["js",{"_index":474,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["jsx",{"_index":1375,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["kanban",{"_index":533,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keep",{"_index":421,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["key",{"_index":497,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["kind",{"_index":922,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["knight",{"_index":1047,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knight'",{"_index":1165,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightcompon",{"_index":1050,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposit",{"_index":1153,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition$|async",{"_index":1183,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightsourc",{"_index":1242,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["know",{"_index":507,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["kp",{"_index":1202,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["laid",{"_index":1031,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["larg",{"_index":764,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["last",{"_index":430,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lastli",{"_index":1312,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["later",{"_index":530,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["layer",{"_index":195,"title":{},"body":{"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragPreviewOptions.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["lazi",{"_index":889,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["leak",{"_index":637,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["learn",{"_index":337,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["learnabl",{"_index":1280,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["leav",{"_index":168,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["left",{"_index":330,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["legend",{"_index":613,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}],["let",{"_index":193,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["let'",{"_index":1117,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["level",{"_index":771,"title":{},"body":{"index.html":{}}}],["librari",{"_index":827,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["licens",{"_index":858,"title":{},"body":{"index.html":{}}}],["lifecycl",{"_index":652,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lifetim",{"_index":650,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["lift",{"_index":1272,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lightweight",{"_index":1161,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["limit",{"_index":182,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["limitedsupplyofpap",{"_index":950,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["line",{"_index":1074,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["linearli",{"_index":332,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["liner",{"_index":953,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["link",{"_index":460,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["list",{"_index":367,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["listen",{"_index":69,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen()/subscrib",{"_index":77,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["listen(m",{"_index":159,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen(mapfn",{"_index":285,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["listen(mapto",{"_index":108,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["liter",{"_index":567,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["littl",{"_index":1245,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["live",{"_index":758,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["load",{"_index":890,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["logic",{"_index":422,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["long",{"_index":1313,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["longer",{"_index":172,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["look",{"_index":909,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["loop",{"_index":1118,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lot",{"_index":625,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lower",{"_index":770,"title":{},"body":{"index.html":{}}}],["luna",{"_index":817,"title":{},"body":{"index.html":{}}}],["m.candrop",{"_index":1299,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["m.isdrag",{"_index":160,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["m.isov",{"_index":1300,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maco",{"_index":797,"title":{},"body":{"index.html":{}}}],["made",{"_index":383,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{}}}],["maintain",{"_index":112,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["make",{"_index":212,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["manag",{"_index":283,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/translating-react-code.html":{}}}],["mandat",{"_index":1326,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mani",{"_index":175,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["manual",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["map",{"_index":1296,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["mapfn",{"_index":287,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["mapto",{"_index":161,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["marker",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":30,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["math.abs(di",{"_index":1209,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.abs(dx",{"_index":1208,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.floor(i",{"_index":1149,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maxim",{"_index":781,"title":{},"body":{"index.html":{}}}],["mayb",{"_index":629,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["mean",{"_index":328,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["merg",{"_index":800,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":306,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["method",{"_index":16,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["midflight",{"_index":186,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["minim",{"_index":506,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["miscellan",{"_index":712,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":860,"title":{},"body":{"index.html":{}}}],["mobil",{"_index":914,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mode",{"_index":896,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["modern",{"_index":1125,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modifi",{"_index":523,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["modul",{"_index":612,"title":{"modules/SkyhookDndModule.html":{},"modules.html":{}},"body":{"modules/SkyhookDndModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["module'",{"_index":1077,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moment",{"_index":1217,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["monitor",{"_index":97,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.candrop",{"_index":147,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.diddrop",{"_index":955,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.getdropresult",{"_index":487,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.getitem",{"_index":476,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.isdrag",{"_index":143,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.isov",{"_index":145,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.t",{"_index":292,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["monitorbas",{"_index":294,"title":{"interfaces/MonitorBase.html":{}},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["moot",{"_index":1362,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["more",{"_index":254,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["mount",{"_index":539,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mous",{"_index":200,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["movabl",{"_index":793,"title":{},"body":{"index.html":{}}}],["move",{"_index":206,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["moveknight",{"_index":1222,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moveknight(to",{"_index":1173,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["much",{"_index":1188,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["multi",{"_index":9,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend",{"_index":40,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend(html5totouch",{"_index":925,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["multipl",{"_index":1357,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mutabl",{"_index":823,"title":{},"body":{"index.html":{}}}],["mutat",{"_index":755,"title":{},"body":{"index.html":{}}}],["mybackend",{"_index":938,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mycompon",{"_index":1338,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mydraggeditemtyp",{"_index":483,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mydropresult",{"_index":493,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["name",{"_index":25,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSource.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/functions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["near",{"_index":784,"title":{},"body":{"index.html":{}}}],["neat",{"_index":984,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["necessari",{"_index":191,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["necessarili",{"_index":825,"title":{},"body":{"index.html":{}}}],["need",{"_index":36,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nest",{"_index":434,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["never",{"_index":1037,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["new",{"_index":93,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["next",{"_index":340,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nextopt",{"_index":727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ng",{"_index":1097,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ng2",{"_index":832,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":999,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif",{"_index":151,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif=\"aaa",{"_index":1185,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngmodul",{"_index":885,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["ngonchang",{"_index":399,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngondestroy",{"_index":165,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngoninit",{"_index":398,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngrx",{"_index":1162,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngrx/store",{"_index":585,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["ngstyle",{"_index":1091,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngswitch",{"_index":227,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ngzone.run",{"_index":547,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["nobl",{"_index":1195,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["node",{"_index":183,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["nohtml5preview",{"_index":402,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["non",{"_index":559,"title":{},"body":{"directives/DropTargetDirective.html":{},"index.html":{}}}],["none",{"_index":461,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notat",{"_index":1364,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["note",{"_index":415,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["noth",{"_index":580,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notic",{"_index":921,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notifi",{"_index":118,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["now",{"_index":220,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["null",{"_index":157,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["number",{"_index":318,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["o",{"_index":111,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["object",{"_index":133,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observ",{"_index":162,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable.combinelatest",{"_index":1371,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["observable.map",{"_index":121,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["obviou",{"_index":1279,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["occur",{"_index":342,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offer",{"_index":906,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["offset",{"_index":323,"title":{"interfaces/Offset.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["offseti",{"_index":317,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offsetx",{"_index":316,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["on",{"_index":122,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["onc",{"_index":394,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["onload",{"_index":1025,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["opac",{"_index":346,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["oper",{"_index":296,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["oppos",{"_index":571,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["optim",{"_index":124,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["optimis",{"_index":1034,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["option",{"_index":27,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/functions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["optionsher",{"_index":945,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["order",{"_index":1352,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["origin",{"_index":356,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["other",{"_index":745,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":298,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["out",{"_index":621,"title":{},"body":{"modules/SkyhookDndModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["output",{"_index":125,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["outsid",{"_index":429,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["over",{"_index":232,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["overal",{"_index":1020,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["overlay",{"_index":1294,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overlaystyl",{"_index":1305,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overrid",{"_index":438,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{}}}],["overview",{"_index":864,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":441,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["owner'",{"_index":413,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["p",{"_index":286,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["packag",{"_index":703,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":233,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["papercount",{"_index":949,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["paramet",{"_index":23,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSource.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/functions.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["parent",{"_index":436,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["part",{"_index":911,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["particular",{"_index":366,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["particularli",{"_index":1042,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pass",{"_index":310,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["past",{"_index":1349,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pattern",{"_index":89,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["pay",{"_index":1111,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["peer",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":228,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["perfectli",{"_index":1263,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["perform",{"_index":188,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pick",{"_index":505,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["piec",{"_index":234,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipe",{"_index":1030,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipelin",{"_index":816,"title":{},"body":{"index.html":{}}}],["place",{"_index":522,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["plain",{"_index":60,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["plan",{"_index":255,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["platform",{"_index":762,"title":{},"body":{"index.html":{}}}],["play",{"_index":1065,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["player",{"_index":1258,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plenti",{"_index":828,"title":{},"body":{"index.html":{}}}],["plural",{"_index":560,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["point",{"_index":1110,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pointer",{"_index":568,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["poor",{"_index":997,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["popul",{"_index":1390,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pose",{"_index":1011,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["posit",{"_index":223,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["possibil",{"_index":270,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["possibl",{"_index":765,"title":{},"body":{"index.html":{}}}],["potenti",{"_index":855,"title":{},"body":{"index.html":{}}}],["power",{"_index":739,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["practic",{"_index":252,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["present",{"_index":1323,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["preserv",{"_index":1266,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["press",{"_index":498,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["prevent",{"_index":478,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["preview",{"_index":180,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["previous",{"_index":393,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{}}}],["primari",{"_index":1353,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["primit",{"_index":768,"title":{},"body":{"index.html":{}}}],["privat",{"_index":1275,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["probabl",{"_index":149,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["problem",{"_index":851,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["procedur",{"_index":1288,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["process",{"_index":1262,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["produc",{"_index":648,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["product",{"_index":1064,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["program",{"_index":813,"title":{},"body":{"index.html":{}}}],["progress",{"_index":297,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["project",{"_index":604,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["prop",{"_index":1332,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["properti",{"_index":56,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/FactoryArgs.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["props.someproperti",{"_index":1334,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.typ",{"_index":1382,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["prospect",{"_index":1198,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["provid",{"_index":34,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"modules/SkyhookDndModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["public",{"_index":638,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["pull",{"_index":249,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["pure",{"_index":240,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["put",{"_index":509,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["queri",{"_index":518,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["quick",{"_index":1330,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["quickstart",{"_index":752,"title":{"additional-documentation/quickstart.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["quirk",{"_index":763,"title":{},"body":{"index.html":{}}}],["quit",{"_index":831,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rapidli",{"_index":1033,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["rare",{"_index":348,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["re",{"_index":1223,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["react",{"_index":137,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["react.compon",{"_index":1339,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["react/react",{"_index":1348,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["read",{"_index":267,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["readymad",{"_index":769,"title":{},"body":{"index.html":{}}}],["real",{"_index":962,"title":{},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["realli",{"_index":1114,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rear",{"_index":929,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reason",{"_index":542,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["receiv",{"_index":582,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["receivehandlerid",{"_index":454,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"classes/DropTargetMonitorClass.html":{}}}],["receivehandlerid(sourceid",{"_index":456,"title":{},"body":{"classes/DragSourceMonitorClass.html":{}}}],["receivehandlerid(targetid",{"_index":575,"title":{},"body":{"classes/DropTargetMonitorClass.html":{}}}],["recent",{"_index":1170,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["recognis",{"_index":491,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["recommend",{"_index":994,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["record",{"_index":431,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["rectangl",{"_index":1002,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["red",{"_index":1286,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["reduc",{"_index":230,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DropTargetDirective.html":{}}}],["redund",{"_index":1180,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["refer",{"_index":129,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["reflect",{"_index":347,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["regist",{"_index":647,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["registerhandl",{"_index":594,"title":{},"body":{"interfaces/FactoryArgs.html":{}}}],["registersourc",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["registersource(typ",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["registertarget",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["registertarget(typ",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regular",{"_index":959,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rel",{"_index":324,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["relat",{"_index":365,"title":{},"body":{"interfaces/DragSource.html":{},"index.html":{}}}],["releas",{"_index":859,"title":{},"body":{"index.html":{}}}],["relev",{"_index":305,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["rememb",{"_index":965,"title":{},"body":{"additional-documentation/guide.html":{}}}],["remind",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remov",{"_index":1191,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["renam",{"_index":931,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["render",{"_index":177,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["repeat(8",{"_index":1130,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replac",{"_index":1215,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replay",{"_index":1169,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replic",{"_index":424,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["repres",{"_index":6,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["requir",{"_index":87,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["reset",{"_index":620,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}],["resolv",{"_index":941,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resort",{"_index":357,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["respect",{"_index":903,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["respond",{"_index":964,"title":{},"body":{"additional-documentation/guide.html":{}}}],["respons",{"_index":1051,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rest",{"_index":1388,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["result",{"_index":29,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["result.dropeffect",{"_index":495,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["resurrect",{"_index":531,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["retain",{"_index":54,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["return",{"_index":28,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reus",{"_index":245,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["reusabl",{"_index":608,"title":{},"body":{"interfaces/Offset.html":{}}}],["rgba(0,0,0,0",{"_index":1309,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["right",{"_index":333,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["root",{"_index":605,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{}}}],["row",{"_index":1132,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ruin",{"_index":1264,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rule",{"_index":794,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["run",{"_index":101,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["rxj",{"_index":7,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"dependencies.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rxjs/behaviorsubject",{"_index":1172,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rxjs/oper",{"_index":1297,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rxjs/subscript",{"_index":633,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["sake",{"_index":1134,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["same",{"_index":21,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sane",{"_index":902,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["save",{"_index":1028,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scalar",{"_index":131,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["scope",{"_index":1178,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["screen",{"_index":1015,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshot",{"_index":184,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["seamlessli",{"_index":919,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["second",{"_index":803,"title":{},"body":{"index.html":{}}}],["section",{"_index":1078,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["see",{"_index":57,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["seem",{"_index":1224,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["seen",{"_index":1282,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["select",{"_index":1016,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["selector",{"_index":307,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sens",{"_index":1115,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sensibl",{"_index":350,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["separ",{"_index":237,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["serv",{"_index":1234,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["servic",{"_index":1175,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["set",{"_index":351,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["setdroptargettype(t",{"_index":561,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["settyp",{"_index":372,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["settype(typ",{"_index":390,"title":{},"body":{"interfaces/DragSource.html":{}}}],["settype/settyp",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settypes(typ",{"_index":553,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["shallow",{"_index":569,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{}}}],["shallowequ",{"_index":132,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["share",{"_index":746,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":403,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["shorthand",{"_index":952,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["shouldn't",{"_index":543,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["show",{"_index":464,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["showoverlay",{"_index":1301,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sidebar",{"_index":913,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["similar",{"_index":528,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["simpl",{"_index":423,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["simpler",{"_index":583,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["simpli",{"_index":229,"title":{},"body":{"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["simul",{"_index":388,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["singl",{"_index":995,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["situat",{"_index":988,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sixtyfour",{"_index":1119,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["size",{"_index":327,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhook",{"_index":44,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhookdndmodul",{"_index":39,"title":{"modules/SkyhookDndModule.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhookdndmodule.forroot",{"_index":45,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["skyhookdndservic",{"_index":75,"title":{"injectables/SkyhookDndService.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhookdndservice#draglay",{"_index":970,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#dragsourc",{"_index":967,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#droptarget",{"_index":969,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice.draglay",{"_index":211,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["skyhookdndservice.dragsourc",{"_index":1329,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["slightli",{"_index":1246,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["small",{"_index":123,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["smaller",{"_index":1013,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["smart",{"_index":238,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["snap",{"_index":779,"title":{},"body":{"index.html":{}}}],["solid",{"_index":1128,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solut",{"_index":783,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["solv",{"_index":918,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somebackend",{"_index":944,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somedragsourceconnection.connectdragpreview(img",{"_index":1026,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["someimaginarybackendwithnamedexport",{"_index":932,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["someon",{"_index":1281,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["someproperti",{"_index":1333,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["someth",{"_index":218,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sometim",{"_index":187,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["somewher",{"_index":250,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sortabl",{"_index":780,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":204,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["source'",{"_index":584,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["source.t",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sourceconnectionfactori",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sourceconnectionfactory(factoryarg",{"_index":729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sourceconstructor",{"_index":654,"title":{"interfaces/SourceConstructor.html":{}},"body":{"interfaces/SourceConstructor.html":{},"coverage.html":{}}}],["sourceid",{"_index":446,"title":{},"body":{"classes/DragSourceMonitorClass.html":{}}}],["space",{"_index":1101,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["span",{"_index":1067,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spec",{"_index":91,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/functions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["spec.hov",{"_index":99,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["spec.hover(monitor",{"_index":100,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["special",{"_index":196,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["specif",{"_index":787,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specifi",{"_index":85,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["specification.t",{"_index":471,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["spirit",{"_index":1284,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spot",{"_index":205,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["squar",{"_index":1055,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecompon",{"_index":1052,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["src/.../arecollectsequal.t",{"_index":713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../areoptionsequal.t",{"_index":714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../connect",{"_index":715,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../createsourceconnector.t",{"_index":716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../createsourcefactory.t",{"_index":717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../createsourcemonitor.t",{"_index":718,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../createtargetconnector.t",{"_index":719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../createtargetfactory.t",{"_index":720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../createtargetmonitor.t",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../regist",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tokens.t",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../type",{"_index":869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/connect",{"_index":64,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["src/connector.service.t",{"_index":4,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["src/connectors.t",{"_index":312,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["src/dnd.directive.t",{"_index":302,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["src/dnd.module.t",{"_index":32,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["src/drag",{"_index":470,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{}}}],["src/drop",{"_index":576,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["src/internal/connect",{"_index":589,"title":{},"body":{"interfaces/FactoryArgs.html":{},"interfaces/SourceConstructor.html":{},"interfaces/TargetConstructor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/internal/createsourceconnector.t",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/internal/createsourcefactory.t",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/internal/createsourcemonitor.t",{"_index":444,"title":{},"body":{"classes/DragSourceMonitorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/internal/createtargetconnector.t",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/internal/createtargetfactory.t",{"_index":681,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/internal/createtargetmonitor.t",{"_index":573,"title":{},"body":{"classes/DropTargetMonitorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/internal/drag",{"_index":273,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"coverage.html":{}}}],["src/internal/regist",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/layer",{"_index":291,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"coverage.html":{}}}],["src/monitor",{"_index":595,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["src/sourc",{"_index":408,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"coverage.html":{}}}],["src/target",{"_index":564,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["src/tokens.t",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/type",{"_index":606,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/utils/arecollectsequal.t",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/areoptionsequal.t",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stage",{"_index":1261,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["stamp",{"_index":798,"title":{},"body":{"index.html":{}}}],["standard",{"_index":12,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["start",{"_index":203,"title":{"index.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["state",{"_index":116,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["statement",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":942,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["stationari",{"_index":1251,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["step",{"_index":908,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["still",{"_index":1138,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["store",{"_index":973,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["strang",{"_index":982,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["strategi",{"_index":1220,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["strictli",{"_index":570,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["string",{"_index":391,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["string|symbol",{"_index":1386,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["strong",{"_index":482,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["structur",{"_index":998,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["struggl",{"_index":842,"title":{},"body":{"index.html":{}}}],["style",{"_index":138,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sub",{"_index":754,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["subj",{"_index":92,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subj.next",{"_index":98,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subject",{"_index":94,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["subscrib",{"_index":158,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscribe(callback",{"_index":106,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscript",{"_index":8,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription#add",{"_index":22,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["subscription.add",{"_index":72,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscription.add(conn",{"_index":989,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscriptionlik",{"_index":13,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["success",{"_index":1221,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["such",{"_index":352,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["suffic",{"_index":179,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["suffici",{"_index":520,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["superpow",{"_index":826,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":248,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["support",{"_index":360,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"injectables/SkyhookDndService.html":{},"modules.html":{},"additional-documentation/quickstart.html":{}}}],["sure",{"_index":213,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["svg",{"_index":862,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":920,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["symbol",{"_index":870,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["syntax",{"_index":894,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["t",{"_index":562,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["tabl",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1083,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["take",{"_index":1009,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["target",{"_index":427,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["target.t",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["targetconnectionfactori",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["targetconnectionfactory(factoryarg",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetconstructor",{"_index":655,"title":{"interfaces/TargetConstructor.html":{}},"body":{"interfaces/TargetConstructor.html":{},"coverage.html":{}}}],["targetid",{"_index":574,"title":{},"body":{"classes/DropTargetMonitorClass.html":{}}}],["tast",{"_index":838,"title":{},"body":{"index.html":{}}}],["tear",{"_index":974,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["teardown",{"_index":107,"title":{},"body":{"interfaces/ConnectionBase.html":{},"classes/DragLayerConnectionClass.html":{}}}],["teardownlog",{"_index":20,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"classes/DragLayerConnectionClass.html":{}}}],["technic",{"_index":537,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["tediou",{"_index":626,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["tell",{"_index":1247,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["templat",{"_index":154,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["template'",{"_index":1376,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["tempt",{"_index":508,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ten",{"_index":987,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["term",{"_index":1372,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["test",{"_index":389,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["text",{"_index":1017,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["that'",{"_index":368,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/quickstart.html":{}}}],["therefor",{"_index":1361,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["thing",{"_index":900,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["think",{"_index":844,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.black",{"_index":1088,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.cat.id",{"_index":976,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.collected$.pipe(map(c",{"_index":1302,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.collected$.pipe(map(col",{"_index":1306,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.currentposit",{"_index":1201,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.destroy",{"_index":634,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.add(xxx.subscrib",{"_index":630,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.unsubscrib",{"_index":635,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.dnd.dragsourc",{"_index":484,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"cat",{"_index":975,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"dragm",{"_index":1003,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.dragsource(\"pap",{"_index":951,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.dnd.dragsource(itemtypes.knight",{"_index":1243,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.dnd.droptarget",{"_index":494,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["this.dnd.droptarget([\"cat",{"_index":977,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.droptarget(itemtypes.knight",{"_index":1268,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.fireaction(monitor.getitem",{"_index":1344,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.game.canmoveknight(po",{"_index":1212,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.canmoveknight(this.posit",{"_index":1273,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.knightposit",{"_index":1176,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(po",{"_index":1194,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(this.posit",{"_index":1274,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.id",{"_index":485,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["this.itemsource.destroy",{"_index":1347,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.itemsource.listen(monitor",{"_index":1345,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.knightposition$.next(to",{"_index":1174,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightposition$.subscribe(kp",{"_index":1200,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.connectdragpreview(img",{"_index":1317,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.listen(monitor",{"_index":1254,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.unsubscrib",{"_index":1244,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.layer.unsubscrib",{"_index":983,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.method",{"_index":947,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.not",{"_index":1365,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.papercount",{"_index":954,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.posit",{"_index":1267,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.prop",{"_index":1341,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.someproperti",{"_index":426,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["this.source.connectdragpreview(img",{"_index":381,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.unsubscrib",{"_index":979,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.sub",{"_index":990,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.add(myservice.subscrib",{"_index":991,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.unsubscrib",{"_index":993,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.target.listen(m",{"_index":1298,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.target.listen(monitor",{"_index":141,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["this.target.unsubscrib",{"_index":980,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["those",{"_index":119,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["though",{"_index":536,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["three",{"_index":966,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["through",{"_index":126,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["throw",{"_index":1192,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tick",{"_index":341,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["tie",{"_index":649,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["time",{"_index":261,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["tini",{"_index":1045,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tmonitor",{"_index":109,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["to.i",{"_index":1207,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["to.x",{"_index":1205,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["token",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":740,"title":{},"body":{"index.html":{}}}],["top",{"_index":335,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["touch",{"_index":883,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["touchbackend",{"_index":47,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["tradit",{"_index":791,"title":{},"body":{"index.html":{}}}],["transit",{"_index":603,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["translat",{"_index":325,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["transpar",{"_index":1256,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trap",{"_index":1157,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trash",{"_index":796,"title":{},"body":{"index.html":{}}}],["trello.com",{"_index":807,"title":{},"body":{"index.html":{}}}],["tri",{"_index":510,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["trick",{"_index":1182,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["troubleshoot",{"_index":926,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["true",{"_index":295,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["truth",{"_index":757,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["truthi",{"_index":1184,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["turn",{"_index":1099,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tutori",{"_index":753,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["two",{"_index":472,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type",{"_index":26,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/FactoryArgs.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type(",{"_index":1384,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["type_dynam",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":867,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror",{"_index":927,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["typeortypearray",{"_index":554,"title":{},"body":{"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{}}}],["types.t",{"_index":65,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["typescript",{"_index":477,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["typic",{"_index":198,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["typo",{"_index":557,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["ui",{"_index":773,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ultra",{"_index":1160,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["undefin",{"_index":311,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/quickstart.html":{}}}],["under",{"_index":221,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["underli",{"_index":747,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["understand",{"_index":1322,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["unicod",{"_index":1068,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unidirect",{"_index":759,"title":{},"body":{"index.html":{}}}],["uniqu",{"_index":1005,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["unlik",{"_index":1168,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unmount",{"_index":529,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["unsubscrib",{"_index":70,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["unsubscribefromoffsetchang",{"_index":277,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["unsubscribefromstatechang",{"_index":278,"title":{},"body":{"classes/DragLayerConnectionClass.html":{}}}],["until",{"_index":102,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["unwant",{"_index":1018,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["up",{"_index":435,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["updat",{"_index":264,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["url",{"_index":1315,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["us",{"_index":33,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["usabl",{"_index":1041,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["user",{"_index":467,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["usual",{"_index":374,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["valid",{"_index":1285,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["valu",{"_index":284,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"classes/DropTargetMonitorClass.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["vanish",{"_index":1230,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["variabl",{"_index":155,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/ConnectionBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vector",{"_index":600,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["veri",{"_index":418,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["version",{"_index":10,"title":{},"body":{"interfaces/AddSubscription.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vertic",{"_index":334,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["via",{"_index":104,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["view",{"_index":1094,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["viewport",{"_index":599,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["visual",{"_index":241,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["void",{"_index":110,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"classes/DragLayerConnectionClass.html":{},"interfaces/DragSource.html":{},"classes/DragSourceMonitorClass.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"classes/DropTargetMonitorClass.html":{},"interfaces/DropTargetSpec.html":{}}}],["voil",{"_index":1213,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["vs",{"_index":958,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["wait",{"_index":1024,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["want",{"_index":150,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["warn",{"_index":836,"title":{},"body":{"index.html":{}}}],["watch",{"_index":841,"title":{},"body":{"index.html":{}}}],["way",{"_index":891,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["we'll",{"_index":1066,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["we'r",{"_index":985,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["wealth",{"_index":850,"title":{},"body":{"index.html":{}}}],["web",{"_index":1320,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["weight",{"_index":1071,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["weird",{"_index":1226,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["well",{"_index":884,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["what'",{"_index":1239,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whatev",{"_index":1082,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whether",{"_index":217,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["white",{"_index":1054,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whole",{"_index":1000,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["width",{"_index":1107,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wish",{"_index":396,"title":{},"body":{"interfaces/DragSource.html":{}}}],["within",{"_index":1004,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["without",{"_index":82,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["won't",{"_index":362,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["work",{"_index":353,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["worth",{"_index":1049,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wrap",{"_index":1123,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper",{"_index":74,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper(dndservic",{"_index":90,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["write",{"_index":73,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["written",{"_index":1321,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["x",{"_index":610,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["x,i",{"_index":598,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["xxx",{"_index":895,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["xy",{"_index":609,"title":{},"body":{"interfaces/Offset.html":{}}}],["xy(i",{"_index":1147,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["y",{"_index":611,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["yarn",{"_index":750,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["ye",{"_index":385,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{}}}],["yellow",{"_index":1310,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'd",{"_index":1240,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'll",{"_index":1113,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'r",{"_index":192,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["you'v",{"_index":1257,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yourself",{"_index":194,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["zebra",{"_index":978,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["zindex",{"_index":1311,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["zone",{"_index":282,"title":{},"body":{"classes/DragLayerConnectionClass.html":{},"miscellaneous/functions.html":{}}}],["zone.j",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":619,"title":{},"body":{"modules/SkyhookDndModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddSubscription.html":{"url":"interfaces/AddSubscription.html","title":"interface - AddSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddSubscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents an RxJS Subscription, with multi-version compatibility.\nThe standard SubscriptionLike does not contain an add() method.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardownLogic: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n                            Same as RxJS Subscription#add \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardownLogic\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AddSubscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendFactoryInput.html":{"url":"interfaces/BackendFactoryInput.html","title":"interface - BackendFactoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendFactoryInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing backends that need configuring before use to SkyhookDndModule.\nFor use with the MultiBackend:\nimport { createDefaultMultiBackend } from 'angular-skyhook-multi-backend';\n// ...\nSkyhookDndModule.forRoot({ backendFactory: createDefaultMultiBackend })or with the TouchBackend by itself:\nexport function createTouchBackend() {\n     return TouchBackend({ enableMouseEvents: false });\n}\n// ...\nSkyhookDndModule.forRoot({ backendFactory: createTouchBackend })You have to do this to retain AOT compatibility.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backendFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendFactory\n                                    \n                                \n                                \n                                    \n                                        backendFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    See above. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendInput.html":{"url":"interfaces/BackendInput.html","title":"interface - BackendInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing plain backends to SkyhookDndModule. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backend\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                    \n                                \n                                \n                                    \n                                        backend:     BackendFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BackendFactory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain backend, for example the HTML5Backend. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionBase.html":{"url":"interfaces/ConnectionBase.html","title":"interface - ConnectionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConnectionBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                A base type to represent a DOM connection.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    listen\n                                \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardown: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n                            Same as RxJS Subscription.add().\nUseful, for example, for writing wrappers for the SkyhookDndService methods,\nwhich might internally listen()/subscribe to DropTargetSpec and provide\na convenient callback after you hover without dropping or exiting for a specified\nduration. That would require the following pattern:\nfunction wrapper(dndService, types, spec, callback) {\n     let subj = new Subject();\n     let dt = dndService.dropTarget(types, {\n         ...spec,\n         hover: monitor => {\n             subj.next();\n             spec.hover && spec.hover(monitor);\n         }\n     });\n     // runs the callback until the returned connection\n     // is destroyed via unsubscribe()\n     dt.add(subj.pipe( ... ).subscribe(callback))\n     return dt;\n}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardown\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapTo: (monitor: TMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n                            A connection maintains a subscription to dnd-core's drag state\nchanges. This function is how you are notified of those changes.\nThis function is essentially RxJS Observable.map with one small\noptimization: it runs the output of\nthe function you provide through distinctUntilChanged, and checks\nreference equality (===) for scalars and shallowEqual for Objects.\nBecause of #2, you can happily emulate react-dnd-style code like:\ncollected$ = this.target.listen(monitor => ({\n   isDragging: monitor.isDragging(),\n   isOver: monitor.isOver(),\n   canDrop: monitor.canDrop(),\n}));... in which case you probably want to use the *ngIf as pattern for\n  grouping subscriptions into one bound template variable:\n\n   {{c.isDragging ? 'dragging': null}}\n   ...\nYou can also subscribe one-by-one, with isDragging$ = listen(m => m.isDragging()).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapTo\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe()\n                    \n                \n\n\n\n\n                \n                    \n                            This method MUST be called, however you choose to, when ngOnDestroy() fires.\nIf you don't, you will leave subscriptions hanging around that will fire\ncallbacks on components that no longer exist.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayer.html":{"url":"interfaces/DragLayer.html","title":"interface - DragLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                For many use cases, the default rendering of the HTML5 backend should suffice.\nHowever, its drag preview has certain limitations. For example, it has to be an\nexisting node screenshot or an image, and it cannot change midflight.\nSometimes you might want to perform the custom rendering. This also becomes\nnecessary if you're using a custom backend. DragLayer lets you perform the\nrendering of the drag preview yourself.\nA drag layer is a special subscriber to the global drag state. It is called\na 'layer', not just a subscriber, because it is typically used to render custom\nelements that follow the mouse, above all other elements. The data flows like\nso:\ndrag start => global state => drag source => no preview\n                           => drag layer  => preview rendered on the spot\ndrag moved => global state => drag layer  => preview moves\ndrag ends  => global state => drag layer  => preview erasedTo use a drag layer as designed:\n\nCreate a drag layer: SkyhookDndService.dragLayer. Make sure to unsubscribe from\nit in ngOnDestroy().\n\nListen to global drag state changes with DragLayer.listen. These are all available on DragLayerMonitor:\nwhether something is being dragged, what type it is, where the drag started, where the dragged element is now.\n\nIf dragging, render a custom preview under the current mouse position,\ndepending on the item type, in a position: fixed 'layer'. You may like to\nuse an *ngSwitch on the type, rather than one drag layer per type, simply\nto reduce code duplication.\n\n\nYou can see an example of a drag layer over on the Examples page.\nOne piece of advice for using drag layers effectively is to separate 'smart' and\n'dumb' components. If you have one component purely for visuals, which does all\ninput through @Input() and all interactivity through @Output() events, then\nyou can reuse it to display a drag preview based on either data in the item from\nDragSourceSpec.beginDrag, or supplied by a 'smart' component which pulls\ndata from somewhere else using only an id. This practice is even more\nimportant if you are using, or planning on using, anything other than the HTML5\nbackend, because no other backend provides automatic previews. In those cases\nyou must handle every draggable type in a drag layer to have any previews at\nall.\nOr, you could just use angular-skyhook-multi-backend.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    listen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapTo: (monitor: DragLayerMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n                            For listen functions in general, see ConnectionBase.\nThis listen function is called any time the global drag state\nchanges, including the coordinate changes, so that your component can\nprovide a timely updated custom drag preview. You can ask the monitor for\nthe client coordinates of the dragged item. Read the DragLayerMonitor\ndocs to see all the different possibile coordinates you might subscribe\nto.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapTo\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragLayerConnectionClass.html":{"url":"classes/DragLayerConnectionClass.html","title":"class - DragLayerConnectionClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragLayerConnectionClass\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/internal/drag-layer-connection.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DragLayer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isTicking\n                            \n                            \n                                unsubscribeFromOffsetChange\n                            \n                            \n                                unsubscribeFromStateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                listen\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager: DragDropManager, zone: Zone)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                        \n                                                                    DragDropManager\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    Zone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTicking\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isTicking:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribeFromOffsetChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribeFromOffsetChange:     Unsubscribe\n\n                    \n                \n                    \n                        \n                            Type :     Unsubscribe\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribeFromStateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribeFromStateChange:     Unsubscribe\n\n                    \n                \n                    \n                        \n                            Type :     Unsubscribe\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardown: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardown\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapFn: (monitor: DragLayerMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        P\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapFn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n\n                \n                    \n                        getclosed()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayerMonitor.html":{"url":"interfaces/DragLayerMonitor.html","title":"interface - DragLayerMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayerMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/layer-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available inside DragLayer.\n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n                            true if there is a drag operation in progress, false otherwise. \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragPreviewDirective.html":{"url":"directives/DragPreviewDirective.html","title":"directive - DragPreviewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DragPreviewDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to specify which element a DragSource should screenshot as an HTML5 drag preview.\nOnly relevant when using the HTML5 backend.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dragPreview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragPreview\n                            \n                            \n                                dragPreviewOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragPreview\n                    \n                    \n                        The drag source for which this element will be the preview. \n\n                            \n                            Type:    DragSource\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragPreviewOptions\n                    \n                    \n                        Pass an options object as you would to DragSource. \n\n                            \n                            Type:    DragPreviewOptions | undefined\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragPreviewOptions.html":{"url":"interfaces/DragPreviewOptions.html","title":"interface - DragPreviewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragPreviewOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide options for how to render a drag preview. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        anchorX\n                                \n                                \n                                            Optional\n                                        anchorY\n                                \n                                \n                                            Optional\n                                        captureDraggingState\n                                \n                                \n                                            Optional\n                                        offsetX\n                                \n                                \n                                            Optional\n                                        offsetY\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorX\n                                    \n                                \n                                \n                                    \n                                        anchorX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nhorizontal offset of the drag preview when their sizes don't match.\n0 means \"dock the preview to the left\", 0.5 means \"interpolate linearly\"\nand 1 means \"dock the preview to the right\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchorY\n                                    \n                                \n                                \n                                    \n                                        anchorY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nvertical offset of the drag preview when their sizes don't match. 0 means\n\"dock the preview to the top, 0.5 means \"interpolate linearly\" and\n1 means \"dock the preview to the bottom.\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        captureDraggingState\n                                    \n                                \n                                \n                                    \n                                        captureDraggingState:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, false. If true, the component will learn that it is being\ndragged immediately as the drag starts instead of the next tick. This\nmeans that the screenshotting would occur with monitor.isDragging()\nalready being true, and if you apply any styling like a decreased opacity\nto the dragged element, this styling will also be reflected on the\nscreenshot. This is rarely desirable, so false is a sensible default.\nHowever, you might want to set it to true in rare cases, such as if you\nwant to make the custom drag layers work in IE and you need to hide the\noriginal element without resorting to an empty drag preview which IE\ndoesn't support.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetX\n                                    \n                                \n                                \n                                    \n                                        offsetX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetX has a value, anchorX won't be\nused.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetY\n                                    \n                                \n                                \n                                    \n                                        offsetY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetY has a value, anchorY won't be\nused.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSource.html":{"url":"interfaces/DragSource.html","title":"interface - DragSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSource\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Like DropTarget, it can be used just for subscribing to\ndrag state information related to a particular item type or list of types.\nYou do not have to connect it to a DOM element if that's all you want.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDragPreview\n                                \n                                \n                                    connectDragSource\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDragPreview\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDragPreview(elementOrNode: Node, options?: DragPreviewOptions)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DragSource as a preview.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nYou might use an ElementRef.nativeElement, or even an\nImage.\nconst img = new Image();\nimg.onload = this.source.connectDragPreview(img);\nimg.src = '...';The subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DragPreviewOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDragSource\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDragSource(elementOrNode: Node, options?: DragSourceOptions)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DragSource.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DragSourceOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHandlerId()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns the drag source ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setType\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetType(type: string | )\n                    \n                \n\n\n\n\n                \n                    \n                            Use this method to have a dynamically typed source. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDragSourceSpec property.\nIf you wish to have a dynamic type based on an @Input() property, for\nexample, you must call setType() in either of your component's\nngOnInit or ngOnChanges methods:\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string | \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragSourceDirective.html":{"url":"directives/DragSourceDirective.html","title":"directive - DragSourceDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DragSourceDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DragSource to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dragSource]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragSource\n                            \n                            \n                                dragSourceOptions\n                            \n                            \n                                dragSourceType\n                            \n                            \n                                noHTML5Preview\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragSource\n                    \n                    \n                        Which source to connect the DOM to \n\n                            \n                            Type:    DragSource\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceOptions\n                    \n                    \n                        Pass an options object as you would to DragSource. \n\n                            \n                            Type:    DragSourceOptions | undefined\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceType\n                    \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DragSource. \n\n                            \n                            Type:    string | \n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noHTML5Preview\n                    \n                    \n                        Do not render an HTML5 preview. Only applies when using the HTML5 backend.\nIt does not use { captureDraggingState: true } for IE11 support; that is broken.\n\n                        \n                            Default value: false\n                        \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceMonitor.html":{"url":"interfaces/DragSourceMonitor.html","title":"interface - DragSourceMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/source-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DragSource's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrag\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if NO drag operation is in progress, and the owner's\ncanDrag() returns true or is not defined.\nNote that canDrag doesn't blindly return what you supplied in\nDragSourceSpec, so it isn't very useful as a general\nsource-is-enabled/disabled flag.\nInstead, keep your canDrag logic simple, and replicate it in your template.\n content {\n   canDrag: () => this.someProperty\n}\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if some drop target handled the drop event; false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside endDrag() to test whether any drop target\nhas handled the drop. Returns false if called outside endDrag().\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result from\ndrop() overrides the child drop result previously set by the child.\nReturns null if called outside endDrag().\n\n\n                            \n                                Returns :     DropResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if a drag operation is in progress, and either the owner\ninitiated the drag, or its isDragging() is defined and returns true.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragSourceMonitorClass.html":{"url":"classes/DragSourceMonitorClass.html","title":"class - DragSourceMonitorClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragSourceMonitorClass\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/internal/createSourceMonitor.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DragSourceMonitor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                internalMonitor\n                            \n                            \n                                sourceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDrag\n                            \n                            \n                                didDrop\n                            \n                            \n                                getClientOffset\n                            \n                            \n                                getDifferenceFromInitialOffset\n                            \n                            \n                                getDropResult\n                            \n                            \n                                getInitialClientOffset\n                            \n                            \n                                getInitialSourceClientOffset\n                            \n                            \n                                getItem\n                            \n                            \n                                getItemType\n                            \n                            \n                                getSourceClientOffset\n                            \n                            \n                                isDragging\n                            \n                            \n                                receiveHandlerId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager: any)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            internalMonitor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalMonitor:     DragDropMonitor\n\n                    \n                \n                    \n                        \n                            Type :     DragDropMonitor\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sourceId:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDifferenceFromInitialOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDifferenceFromInitialOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItem()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemType()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveHandlerId(sourceId: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sourceId\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceOptions.html":{"url":"interfaces/DragSourceOptions.html","title":"interface - DragSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide customisations for how a backend should handle a DragSource and\ndisplay items dragged from it. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dropEffect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropEffect\n                                    \n                                \n                                \n                                    \n                                        dropEffect:     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string. By default, 'move'. In the browsers that support this\nfeature, specifying 'copy' shows a special \"copying\" cursor, while 'move'\ncorresponds to the \"move\" cursor. You might want to use this option to\nprovide a hint to the user about whether an action is destructive.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceSpec.html":{"url":"interfaces/DragSourceSpec.html","title":"interface - DragSourceSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drag-source-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects.\nItem is the type you return from beginDrag(), and available in monitor.getItem().\nLimitations in TypeScript may prevent inferring this in many circumstances,\nand it will default to {}. It is best if you are strong-typing to pass a\ntype parameter like so:\ninterface MyDraggedItemType { id: number; }\n// ...\nsource = this.dnd.dragSource(..., {\n   beginDrag: monitor => ({ id: this.id })\n})DropResult is the type you expect a drop target to return from drop().\nIt is the type of the object returned by monitor.getDropResult() during endDrag().\nNote that your backend may assign some extra properties. You should define a\nDropResult type that recognises these, such as:\ninterface HTML5DropResult { dropEffect: string; }\ninterface MyDropResult extends HTML5DropResult { id: number; }\ntarget = this.dnd.dropTarget(..., {\n   drop: monitor => ({ id: this.id })\n});\n\nsource = this.dnd.dragSource(..., {\n   endDrag: monitor => {\n       const result = monitor.getDropResult();\n       if (result.dropEffect === 'copy') {\n           // user had alt key pressed + the GreenPlus icon when they dropped,\n           // so copy instead of move\n       }\n   }\n});\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    beginDrag\n                                \n                                \n                                        Optional\n                                    canDrag\n                                \n                                \n                                        Optional\n                                    endDrag\n                                \n                                \n                                        Optional\n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nbeginDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Required. When the dragging starts, beginDrag is called. You must return\na plain JavaScript object describing the data being dragged. What you\nreturn is the only information available to the drop targets about the\ndrag source so it's important to pick the minimal data they need to know.\nYou may be tempted to put a reference to the component into it, but you\nshould try very hard to avoid doing this because it couples the drag\nsources and drop targets. It's a good idea to return something like { id:\nthis.id } from this method.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Item\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Optional. Queries your component to determine whether this source can be\ndragged. Default returns true; this is often sufficient.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            endDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nendDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Optional. Notifies your component when dragging ends.\nThis is a good place to fire actions or modify a component. You will often\nwant to check DragSourceMonitor and DragSourceMonitor for more\ndetails.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            By default, only the drag source that initiated the drag operation is\nconsidered to be dragging. You might override this by matching on the\nDragSourceMonitor.id and your component's id, or similar. Do this if the\noriginal component may be unmounted during the dragging and later\n\"resurrected\" with a different parent. For example, when moving a card\nacross the lists in a Kanban board, you want it to retain the dragged\nappearance—even though technically, the component gets unmounted and\na different one gets mounted every time you hover over another list.\nNote: You may not call DragSourceMonitor inside this method.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTarget\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Represents one drop target and its behaviour, that can listen to the state\nand connect to a DOM element.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDropTarget\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDropTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDropTarget(elementOrNode: Node)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DropTarget.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DropTarget already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHandlerId()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns the drop target ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTypes(type: TypeOrTypeArray)\n                    \n                \n\n\n\n\n                \n                    \n                            Use this method to have a dynamically typed target. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDropTargetSpec property.\nSee DragSource for an example of how to set\na dynamic type, for it is very similar here.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TypeOrTypeArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropTargetDirective.html":{"url":"directives/DropTargetDirective.html","title":"directive - DropTargetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropTargetDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DropTarget to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dropTarget]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropTarget\n                            \n                            \n                                dropTargetType\n                            \n                            \n                                dropTargetTypes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropTarget\n                    \n                    \n                        Which target to connect the DOM to \n\n                            \n                            Type:    DropTarget\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                    \n                        Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetTypes\n                    \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DropTarget. \n\n                            \n                            Type:    TypeOrTypeArray\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n\n\n                \n                    \n                        setdropTargetType(t: )\n                    \n                \n                    \n                        \n                                Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetMonitor.html":{"url":"interfaces/DropTargetMonitor.html","title":"interface - DropTargetMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/target-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DropTarget's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrop\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if there is a drag operation in progress, and the owner's\ncanDrop() returns true or is not defined.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if some drop target has handled the drop event, false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside drop() to test whether any nested drop\ntarget has already handled the drop. Returns false if called outside\ndrop().\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result\nfrom drop() overrides the drop result previously set by the child.\nReturns null if called outside drop().\n\n\n                            \n                                Returns :     DropResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOver\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOver(options?: literal type)\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if there is a drag operation in progress, and the pointer\nis currently hovering over the owner. You may optionally pass\n{ shallow: true } to strictly check whether only the owner is being\nhovered, as opposed to a nested target.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropTargetMonitorClass.html":{"url":"classes/DropTargetMonitorClass.html","title":"class - DropTargetMonitorClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropTargetMonitorClass\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/internal/createTargetMonitor.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        DropTargetMonitor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                internalMonitor\n                            \n                            \n                                targetId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDrop\n                            \n                            \n                                didDrop\n                            \n                            \n                                getClientOffset\n                            \n                            \n                                getDifferenceFromInitialOffset\n                            \n                            \n                                getDropResult\n                            \n                            \n                                getInitialClientOffset\n                            \n                            \n                                getInitialSourceClientOffset\n                            \n                            \n                                getItem\n                            \n                            \n                                getItemType\n                            \n                            \n                                getSourceClientOffset\n                            \n                            \n                                isOver\n                            \n                            \n                                receiveHandlerId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager: any)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            internalMonitor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalMonitor:     DragDropMonitor\n\n                    \n                \n                    \n                        \n                            Type :     DragDropMonitor\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        targetId:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDifferenceFromInitialOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDifferenceFromInitialOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItem()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemType()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOver\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOver(options: object)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { shallow: false }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveHandlerId(targetId: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetId\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetSpec.html":{"url":"interfaces/DropTargetSpec.html","title":"interface - DropTargetSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drop-target-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects. See the extended\ndiscussion of these type parameters at DragSourceSpec.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    canDrop\n                                \n                                \n                                        Optional\n                                    drop\n                                \n                                \n                                        Optional\n                                    hover\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Queries your component to determine whether an item can be dropped on this target.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\nDefault, when not specified, is true.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            drop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrop(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Called when a compatible item is dropped on the target. You may either\nreturn nothing, or a plain object.\nIf you return an object, it is going to become the drop result and will be\navailable to the drag source in its DragSourceSpec method as\nDropTargetMonitor. This is useful in case you want the\nsource to perform different actions depending on which target received the\ndrop. Otherwise, it is simpler to handle the dropped item here.\nIf you have nested drop targets, you can test whether a nested target has\nalready handled drop by checking DropTargetMonitor. Both this\nmethod and the source's endDrag() method are good places to fire\n@ngrx/store actions.\nThis method will not be called if canDrop() is defined and returns false.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DropResult | void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \nhover(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Called frequently while the mouse hovers over the owner drop target while\ndragging a relevant item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactoryArgs.html":{"url":"interfaces/FactoryArgs.html","title":"interface - FactoryArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FactoryArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/internal/connection-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createConnector\n                                \n                                \n                                        createHandler\n                                \n                                \n                                        createMonitor\n                                \n                                \n                                        registerHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createConnector\n                                    \n                                \n                                \n                                    \n                                        createConnector:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createHandler\n                                    \n                                \n                                \n                                    \n                                        createHandler:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createMonitor\n                                    \n                                \n                                \n                                    \n                                        createMonitor:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registerHandler\n                                    \n                                \n                                \n                                    \n                                        registerHandler:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorBase.html":{"url":"interfaces/MonitorBase.html","title":"interface - MonitorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonitorBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monitor-base.ts\n        \n\n            \n                Description\n            \n            \n                The methods common to all monitor classes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getClientOffset\n                                \n                                \n                                    getDifferenceFromInitialOffset\n                                \n                                \n                                    getInitialClientOffset\n                                \n                                \n                                    getInitialSourceClientOffset\n                                \n                                \n                                    getItem\n                                \n                                \n                                    getItemType\n                                \n                                \n                                    getSourceClientOffset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The current mouse x,y position relative to the viewport. Returns null\nif no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDifferenceFromInitialOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDifferenceFromInitialOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            A vector x,y of the displacement of the dragged item from its initial\nposition. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The initial mouse x,y position relative to the viewport, when the current\ndrag operation started. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            x,y relative to viewport of the item's DOM element before it was dragged.\nReturns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItem()\n                    \n                \n\n\n\n\n                \n                    \n                            The item in transit, if any. This is what you returned from\nDragSourceSpec. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Item | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemType()\n                    \n                \n\n\n\n\n                \n                    \n                            The type of the item in transit. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     string |  | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The projected x,y position relative to viewport of the root DOM element of the drag source\n= its initial position + displacement. Returns null if no item is\nbeing dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offset.html":{"url":"interfaces/Offset.html","title":"interface - Offset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Offset\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-ish.ts\n        \n\n            \n                Description\n            \n            \n                Just a plain, reusable xy coordinate type. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SkyhookDndModule.html":{"url":"modules/SkyhookDndModule.html","title":"module - SkyhookDndModule","body":"\n                   \n\n\n\n\n  Modules\n  SkyhookDndModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SkyhookDndModule\n\n\n\ncluster_SkyhookDndModule_declarations\n\n\n\ncluster_SkyhookDndModule_exports\n\n\n\n\nDragPreviewDirective\n\nDragPreviewDirective\n\n\n\nSkyhookDndModule\n\nSkyhookDndModule\n\nSkyhookDndModule -->\n\nDragPreviewDirective->SkyhookDndModule\n\n\n\n\n\nDragSourceDirective\n\nDragSourceDirective\n\nSkyhookDndModule -->\n\nDragSourceDirective->SkyhookDndModule\n\n\n\n\n\nDropTargetDirective\n\nDropTargetDirective\n\nSkyhookDndModule -->\n\nDropTargetDirective->SkyhookDndModule\n\n\n\n\n\nDragPreviewDirective \n\nDragPreviewDirective \n\nDragPreviewDirective  -->\n\nSkyhookDndModule->DragPreviewDirective \n\n\n\n\n\nDragSourceDirective \n\nDragSourceDirective \n\nDragSourceDirective  -->\n\nSkyhookDndModule->DragSourceDirective \n\n\n\n\n\nDropTargetDirective \n\nDropTargetDirective \n\nDropTargetDirective  -->\n\nSkyhookDndModule->DropTargetDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DragPreviewDirective\n                            \n                            \n                                DragSourceDirective\n                            \n                            \n                                DropTargetDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DragPreviewDirective\n                            \n                            \n                                    DragSourceDirective\n                            \n                            \n                                    DropTargetDirective\n                            \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkyhookDndService.html":{"url":"injectables/SkyhookDndService.html","title":"injectable - SkyhookDndService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SkyhookDndService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                For a simple component, unsubscribing is as easy as connection.unsubscribe() in ngOnDestroy()\nIf your components have lots of subscriptions, it can get tedious having to\nunsubscribe from all of them, and you might forget. A common pattern is to create an RxJS Subscription\n(maybe called destroy), to use this.destroy.add(xxx.subscribe(...))\nand to call destroy.unsubscribe() once to clean up all of them. angular-skyhook\nsupports this pattern with by using the subscription parameter on the\nconstructors. Simply:\nimport { Subscription } from 'rxjs/Subscription';\n// ...\ndestroy = new Subscription();\ntarget = this.dnd.dropTarget({\n// ...\n}, this.destroy);\nngOnDestroy() { this.destroy.unsubscribe(); }It is a good habit for avoiding leaked subscriptions, because .\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragLayer\n                            \n                            \n                                    Public\n                                dragSource\n                            \n                            \n                                    Public\n                                dropTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dragLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dragLayer(subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                \n                            \n                        \n\n                \n                    \n                            This method creates a DragLayer object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DragLayer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dragSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dragSource(type: string |  | null, spec: DragSourceSpec, subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                        DropResult\n                                \n                            \n                        \n\n                \n                    \n                            This method creates a DragSource object. It represents a drag source\nand its behaviour, and can be connected to a DOM element by assigning it\nto the [dragSource] directive on that element in your template.\nIt is the corollary of react-dnd's\nDragSource.\nThe spec argument (DragSourceSpec) is a set of queries and\ncallbacks that are called at appropriate times by the internals. The\nqueries are for asking your component whether to drag/listen and what item\ndata to hoist up; the callback (just 1) is for notifying you when the drag\nends.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string |  | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Only the drop targets registered for the same type will react\nto the items produced by this drag source.\nIf you want a dynamic type, pass null as the type; and call {\n\n                                                        \n                                                \n                                                \n                                                        spec\n                                                        \n                                                                    DragSourceSpec\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                An RxJS Subscription to tie the lifetime of the\nconnection to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DragSource\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dropTarget(types: TypeOrTypeArray | null, spec: DropTargetSpec, subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                        DropResult\n                                \n                            \n                        \n\n                \n                    \n                            This drop target will only react to the items produced by the drag sources\nof the specified type or types.\nIf you want a dynamic type, pass null as the type; and call\nDropTarget in a lifecycle hook.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        types\n                                                        \n                                                                    TypeOrTypeArray | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        spec\n                                                        \n                                                                    DropTargetSpec\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DropTarget\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SourceConstructor.html":{"url":"interfaces/SourceConstructor.html","title":"interface - SourceConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SourceConstructor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/internal/connection-factory.ts\n        \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetConstructor.html":{"url":"interfaces/TargetConstructor.html","title":"interface - TargetConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TargetConstructor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/internal/connection-factory.ts\n        \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/connection-types.ts\n            \n            \n                interface\n            \n            \n                ConnectionBase\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/connection-types.ts\n            \n            \n                interface\n            \n            \n                DragLayer\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/connection-types.ts\n            \n            \n                interface\n            \n            \n                DragSource\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/connection-types.ts\n            \n            \n                interface\n            \n            \n                DropTarget\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/connector.service.ts\n            \n            \n                injectable\n            \n            \n                SkyhookDndService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/connector.service.ts\n            \n            \n                interface\n            \n            \n                AddSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/connectors.ts\n            \n            \n                interface\n            \n            \n                DragPreviewOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/connectors.ts\n            \n            \n                interface\n            \n            \n                DragSourceOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/dnd.directive.ts\n            \n            \n                directive\n            \n            \n                DragPreviewDirective\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/dnd.directive.ts\n            \n            \n                directive\n            \n            \n                DragSourceDirective\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/dnd.directive.ts\n            \n            \n                directive\n            \n            \n                DropTargetDirective\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/dnd.module.ts\n            \n            \n                interface\n            \n            \n                BackendFactoryInput\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/dnd.module.ts\n            \n            \n                interface\n            \n            \n                BackendInput\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/drag-source-specification.ts\n            \n            \n                interface\n            \n            \n                DragSourceSpec\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/drop-target-specification.ts\n            \n            \n                interface\n            \n            \n                DropTargetSpec\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/internal/connection-factory.ts\n            \n            \n                interface\n            \n            \n                FactoryArgs\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/internal/connection-factory.ts\n            \n            \n                interface\n            \n            \n                SourceConstructor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/connection-factory.ts\n            \n            \n                interface\n            \n            \n                TargetConstructor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/connection-factory.ts\n            \n            \n                function\n            \n            \n                connectionFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/connection-factory.ts\n            \n            \n                function\n            \n            \n                sourceConnectionFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/connection-factory.ts\n            \n            \n                function\n            \n            \n                targetConnectionFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createSourceConnector.ts\n            \n            \n                function\n            \n            \n                createSourceConnector\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createSourceFactory.ts\n            \n            \n                function\n            \n            \n                createSourceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createSourceMonitor.ts\n            \n            \n                class\n            \n            \n                DragSourceMonitorClass\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/internal/createSourceMonitor.ts\n            \n            \n                function\n            \n            \n                createSourceMonitor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createSourceMonitor.ts\n            \n            \n                variable\n            \n            \n                isCallingCanDrag\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createSourceMonitor.ts\n            \n            \n                variable\n            \n            \n                isCallingIsDragging\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createTargetConnector.ts\n            \n            \n                function\n            \n            \n                createTargetConnector\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createTargetFactory.ts\n            \n            \n                function\n            \n            \n                createTargetFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createTargetMonitor.ts\n            \n            \n                class\n            \n            \n                DropTargetMonitorClass\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/internal/createTargetMonitor.ts\n            \n            \n                function\n            \n            \n                createTargetMonitor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/createTargetMonitor.ts\n            \n            \n                variable\n            \n            \n                isCallingCanDrop\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/drag-layer-connection.ts\n            \n            \n                class\n            \n            \n                DragLayerConnectionClass\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/internal/register-source.ts\n            \n            \n                function\n            \n            \n                registerSource\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/internal/register-target.ts\n            \n            \n                function\n            \n            \n                registerTarget\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/layer-monitor.ts\n            \n            \n                interface\n            \n            \n                DragLayerMonitor\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/monitor-base.ts\n            \n            \n                interface\n            \n            \n                MonitorBase\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/source-monitor.ts\n            \n            \n                interface\n            \n            \n                DragSourceMonitor\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/target-monitor.ts\n            \n            \n                interface\n            \n            \n                DropTargetMonitor\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/tokens.ts\n            \n            \n                variable\n            \n            \n                DRAG_DROP_BACKEND\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/tokens.ts\n            \n            \n                variable\n            \n            \n                DRAG_DROP_MANAGER\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/tokens.ts\n            \n            \n                variable\n            \n            \n                TYPE_DYNAMIC\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/type-ish.ts\n            \n            \n                interface\n            \n            \n                Offset\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/utils/areCollectsEqual.ts\n            \n            \n                function\n            \n            \n                areCollectsEqual\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/utils/areOptionsEqual.ts\n            \n            \n                function\n            \n            \n                areOptionsEqual\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            dnd-core : ^4.0.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >= 5.0.0\n        \n            rxjs : >= 5.5.0\n        \n            zone.js : ~0.8.14\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            areCollectsEqual   (src/.../areCollectsEqual.ts)\n                        \n                        \n                            areOptionsEqual   (src/.../areOptionsEqual.ts)\n                        \n                        \n                            connectionFactory   (src/.../connection-factory.ts)\n                        \n                        \n                            createSourceConnector   (src/.../createSourceConnector.ts)\n                        \n                        \n                            createSourceFactory   (src/.../createSourceFactory.ts)\n                        \n                        \n                            createSourceMonitor   (src/.../createSourceMonitor.ts)\n                        \n                        \n                            createTargetConnector   (src/.../createTargetConnector.ts)\n                        \n                        \n                            createTargetFactory   (src/.../createTargetFactory.ts)\n                        \n                        \n                            createTargetMonitor   (src/.../createTargetMonitor.ts)\n                        \n                        \n                            registerSource   (src/.../register-source.ts)\n                        \n                        \n                            registerTarget   (src/.../register-target.ts)\n                        \n                        \n                            sourceConnectionFactory   (src/.../connection-factory.ts)\n                        \n                        \n                            targetConnectionFactory   (src/.../connection-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/areCollectsEqual.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            areCollectsEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \nareCollectsEqual(a: any, b: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/utils/areOptionsEqual.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            areOptionsEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \nareOptionsEqual(nextOptions: any, currentOptions: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nextOptions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        currentOptions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/connection-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            connectionFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectionFactory(factoryArgs: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryArgs\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceConnectionFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsourceConnectionFactory(factoryArgs: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryArgs\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetConnectionFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ntargetConnectionFactory(factoryArgs: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryArgs\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/createSourceConnector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createSourceConnector\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSourceConnector(backend: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backend\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/createSourceFactory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createSourceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSourceFactory(spec: undefined, zone: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        zone\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/createSourceMonitor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createSourceMonitor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSourceMonitor(manager: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/createTargetConnector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTargetConnector\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTargetConnector(backend: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backend\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/createTargetFactory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTargetFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTargetFactory(spec: undefined, zone: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        zone\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/createTargetMonitor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTargetMonitor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTargetMonitor(manager: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/register-source.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            registerSource\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterSource(type: any, source: undefined, manager: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        source\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        manager\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/internal/register-target.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            registerTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterTarget(type: any, target: undefined, manager: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        target\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        manager\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-skyhook\n \n\n\n\nangular-skyhook is a powerful set of tools and directives for building\ncomplex drag and drop interfaces. It is based on, and very similar to\nreact-dnd by Dan Abramov and others, shares many\nof the underlying abstractions and is also powered by dnd-core.\nCheck out the Examples here.\nInstallation\nyarn add angular-skyhook\nyarn add react-dnd-html5-backendNext, follow the Quickstart and check out the Tutorial.\nSub-packages\n\nangular-skyhook-multi-backend\n\nFeatures\n\nMake any component draggable, or into a drop target.\nDoesn't mutate the DOM, doesn't use classes and CSS to do 'callbacks'.\nThe truth lives in JavaScript, with unidirectional data flow (like\n@ngrx/store) and Observable APIs.\nWorks with HTML5 drag and drop\nCovers up platform quirks\nLargely possible to translate react-dnd code or examples into Angular (see\nTranslating React Code)\n\nNon-Goals\nWe share the same non-goals as react-dnd:\n\nReact DnD gives you a set of powerful primitives, but it does not contain any\nreadymade components. It's lower level than jQuery UI or\ninteract.js and is focused on getting the drag and drop\ninteraction right, leaving its visual aspects such as axis constraints or\nsnapping to you. For example, React DnD doesn't plan to provide a Sortable\ncomponent. Instead it makes it easy for you to build your own, with any\nrendering customizations that you need.\n\nGoals\nInstead of building maximally-ergonomic solutions to simple use cases,\nreact-dnd and angular-skyhook provide a near-complete abstraction of\nanything you could want to do with drag and drop. They are lower-level building\nblocks that make it easy to implement some very complex interactions. They\nassign no specific meaning to a drag/drop operation. You get to define what\nhappens when a drag starts or ends or hovers. Here are some ambitious examples:\n\nThe traditional react-dnd tutorial, a chess board with movable pieces and rules\nDeleting items by dragging them to a 'trash can', like in the macOS dock.\nStamping out a template by dragging the template into a work area\nMerging two items by dragging one on top of the other\nHover over a 'folder' for a few seconds to 'drill down' into it\nThe famous lists and cards on trello.com, which actually uses react-dnd\nA diagramming tool where you can draw links between nodes\nA 2D CAD program\nA graphical query builder, or visual data pipeline like Luna\nMany other demonstrations of react-dnd (most with GIFs) in use\n\nAlternatives\nIt is important to note that for bare-bones sortable lists, where you have\na mutable array of simple values, you don't necessarily need the superpowers in\nthis library. There are plenty of cookie-cutter solutions out there, like the\nquite-powerful ng2-dnd or ng2-dragula, which may\nget you to your deadline faster than learning and using angular-skyhook. But\nbe warned; you may find yourself wanting more dragging power once you get\na taste. In fact, this package was born out of maintaining ng2-dragula and\nwatching users struggle to implement what react-dnd was born for.\nIssues\nNot all issues are angular-skyhook-related. If you think you found a bug in\ndnd-core or with the HTML5 backend, those issues belong on that\ncodebase with their many contributors\nand wealth of experience. If there is a problem with another backend you are\nusing, file an issue with that backend so you can get more specific help and so\nthat the community can benefit.\nIssues and potential improvements to angular-skyhook are discussed on\nGitHub.\nLicense\nThis library is released under the MIT license. It depends on dnd-core,\nwhich is under the BSD license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SkyhookDndModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SkyhookDndModule\n\n\n\ncluster_SkyhookDndModule_declarations\n\n\n\ncluster_SkyhookDndModule_exports\n\n\n\n\nDragPreviewDirective\n\nDragPreviewDirective\n\n\n\nSkyhookDndModule\n\nSkyhookDndModule\n\nSkyhookDndModule -->\n\nDragPreviewDirective->SkyhookDndModule\n\n\n\n\n\nDragSourceDirective\n\nDragSourceDirective\n\nSkyhookDndModule -->\n\nDragSourceDirective->SkyhookDndModule\n\n\n\n\n\nDropTargetDirective\n\nDropTargetDirective\n\nSkyhookDndModule -->\n\nDropTargetDirective->SkyhookDndModule\n\n\n\n\n\nDragPreviewDirective \n\nDragPreviewDirective \n\nDragPreviewDirective  -->\n\nSkyhookDndModule->DragPreviewDirective \n\n\n\n\n\nDragSourceDirective \n\nDragSourceDirective \n\nDragSourceDirective  -->\n\nSkyhookDndModule->DragSourceDirective \n\n\n\n\n\nDropTargetDirective \n\nDropTargetDirective \n\nDropTargetDirective  -->\n\nSkyhookDndModule->DropTargetDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TypeOrTypeArray   (src/.../type-ish.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/type-ish.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOrTypeArray\n                    \n                \n                    \n                        \n                            String, symbol, or an array of either. Used on drop targets. \n\n                        \n                    \n                \n                    \n                        TypeOrTypeArray:     string |  | Array\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAG_DROP_BACKEND   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_MANAGER   (src/.../tokens.ts)\n                        \n                        \n                            isCallingCanDrag   (src/.../createSourceMonitor.ts)\n                        \n                        \n                            isCallingCanDrop   (src/.../createTargetMonitor.ts)\n                        \n                        \n                            isCallingIsDragging   (src/.../createSourceMonitor.ts)\n                        \n                        \n                            TYPE_DYNAMIC   (src/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_BACKEND\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DRAG_DROP_BACKEND:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'dnd-core compatible backend'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend currently in use. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_MANAGER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DRAG_DROP_MANAGER:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>(\n    'dnd-core DragDropManager'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core DragDropManager \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TYPE_DYNAMIC\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TYPE_DYNAMIC:     \n\n                    \n                \n                    \n                        \n                            Default value : Symbol(\n    'no type specified, you must provide one with setType/setTypes'\n)\n                        \n                    \n\n                \n                    \n                        The type a source or target is given as a marker for 'you supplied null as a type',\nso that library consumers can be reminded to use setType/setTypes manually.\nSee DragSource, DropTarget.\n\n                    \n                \n\n            \n        \n\n    src/internal/createSourceMonitor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isCallingCanDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCallingCanDrag:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCallingIsDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCallingIsDragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n\n            \n        \n\n    src/internal/createTargetMonitor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isCallingCanDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCallingCanDrop:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/quickstart.html":{"url":"additional-documentation/quickstart.html","title":"additional-page - Quickstart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nyarn add angular-skyhook\nyarn add react-dnd-html5-backendYou might consider angular-skyhook-multi-backend instead of the HTML5\nbackend, because it allows adding touch support as well.\nThen import SkyhookDndModule and provide the backend:\nimport { SkyhookDndModule } from 'angular-skyhook';\nimport { default as HTML5Backend } from 'react-dnd-html5-backend'\n\n@NgModule({\n  imports: [\n    // Don't forget the forRoot()\n    SkyhookDndModule.forRoot({ backend: HTML5Backend }),\n  ]\n})\nexport class AppModule {}If you need it again on a child module, like a lazy-loaded module, you only need\nto import SkyhookDndModule there. That way the backend and global drag state is only\ninitialized once. But you may use forRootto inject a new instance or to\ninclude drag and drop on only some child modules.\nWhen installing backends originally made for React (they all use default\nexports), make sure you use this syntax:\nimport { default as XXX } from '...'\n... because Angular in AOT mode cannot do import XXX from '...'\ndirectly.\nConcepts\nThese pieces make up the library:\n\nAn item (JS Object, not a DOM node) is the source of truth for each drag\noperation\nA drag source registers a DOM node to commence drag operations\nA drop target registers a DOM node for hover and drop events\nwhile dragging\nA way for each to provide, listen for and query changes in the drag state:\na monitor and appropriate callbacks\nHooks to provide some other DOM element as the drag preview.\n\nreact-dnd defined one more thing, inspired by HTML5, to make using this sane:\neach item has a type, and drag sources and drop targets will\nrespectively emit and accept only items with matching types.\nThat's it. This library offers all those concepts in an Angular-friendly way,\nthat is also largely compatible with a lot of react-dnd code and examples.\nNext steps\n\nHave a look at the Examples, and browse their source code in the\nexamples app on GitHub.\n\nRead and follow the Tutorial\n\nRead the 3-part guide in the sidebar. Any specifics are available by browsing the interfaces and\nclasses.\n\n\nTouch support and alternate backends\nMobile devices have not implemented HTML5 drag and drop. You will need:\n\nA different backend using click or touch events, without dropping desktop support\nA way to render drag previews. Where on desktops you\ncan let the browser render drag previews, when using a backend based on click\nor touch events, on mobile you have to render them yourself.\n\nA good way to solve both problems at once is using\nangular-skyhook-multi-backend. It is based on the original\ndnd-multi-backend, which was designed to seamlessly switch\nbetween an HTML5 and a touch backend when it noticed different\nkinds of interaction. The Skyhook version includes a preview component.\nNote also that you will need to use an exported function\nto provide the backend, to retain AOT compatibility, if it requires assembly.\nMultiBackend, for example, can be used like so:\nexport function createBackend() {\n    return MultiBackend(HTML5ToTouch);\n}\n@NgModule({\n  imports: [\n    SkyhookDndModule.forRoot({ backendFactory: createBackend })\n  ]\n}\n// ...Troubleshooting\nI get TypeError: backend is null, only when AOT is enabled\nAlso rears its head as No such property 'default' of undefined.\nTroubleshooting steps\n\nCheck you are importing the backend and renaming any default exports.\nimport { default as HTML5Backend } from 'react-dnd-html5-backend';\nimport { SomeImaginaryBackendWithNamedExports } from 'some-imaginary-backend';Generally, make sure you are importing the backend correctly. If it does not\nprovide Typescript definitions, you might have to read the documentation or\nbrowse the source code.\n\nMake sure in your root Angular module (usually app.module.ts) you import\nSkyhookDndModule.forRoot({ backend: MyBackend }) instead of plain SkyhookDndModule.\n\n\nI get Error encountered resolving symbol values statically. Calling function 'default' with AOT enabled.\nMake sure you are following the special instructions for assembly-required backends\nlike MultiBackend or any backend that allows SomeBackend({ optionsHere: true }),\nlike TouchBackend. See above.\nIn the spec callbacks, my component doesn't have any properties, and it can't call this.method()!\nMake sure you use the arrow function syntax (() =>) in your specs so this will refer to your component. Example:\npaperCount = 3;\nlimitedSupplyOfPaper = this.dnd.dragSource(\"PAPER\", {\n    // use shorthand for one-liners that return a value\n    canDrag: () => this.paperCount > 0,\n    endDrag: (monitor) => {\n        if (monitor.didDrop()) {\n            this.paperCount--;\n        }\n    }\n});This demo shows comprehensively what this refers to\nin arrow functions vs regular ones. A sufficiently advanced editor shouldn't\nshow any completions at this.| in a regular function, as it will resolve the\ntype of this to be any.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide.html":{"url":"additional-documentation/guide.html","title":"additional-page - Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen using angular-skyhook, you follow this general pattern:\n\nCreate a connection and specify its behaviour: Creating Connections\nUse directives or methods to connect it to real DOM elements:\nConnecting to DOM\nUse the connection's listen method to listen for relevant state changes, and respond to them:\nMonitoring State\nRemember to destroy the connection in ngOnDestroy(). Refer to part 1\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/1.-creating-connections.html":{"url":"additional-documentation/guide/1.-creating-connections.html","title":"additional-page - 1. Creating connections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreating connections\nThere are three types of connection.\n\nDragSource\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dragSource\nusing a\nDragSourceSpec\nand attach it to the DOM\nwith [dragSource]=\"...\".\n\nDropTarget\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dropTarget\nusing a\nDropTargetSpec\nand attach it to the DOM\nwith [dropTarget]=\"...\".\n\nDragLayer\nis an advanced feature that allows you to implement your own\ncustom drag previews. Create one with\nSkyhookDndService#dragLayer,\nbut you don't attach them to the DOM, you simply listen for changes.\n\n\nAll three of them have the same lifecycle, and all three of them offer a\n.listen() function, which allows you to listen to changes. See\nConnectionBase for what they have in\ncommon.\nUsing the SkyhookDndService to create connections\nFirst, inject \nSkyhookDndService,\n into your component.\nconstructor(private dnd: SkyhookDndService) { ... }Then, use one of the methods\nSkyhookDndService#dragSource,\nSkyhookDndService#dropTarget\nto create one and store it as an instance variable, and make sure to tear down\nthe connection in ngOnDestroy.\nsource = this.dnd.dragSource(\"CAT\", {\n  beginDrag: (monitor) => ({ id: this.cat.id })\n  // ...\n});\n// or\ntarget = this.dnd.dropTarget([\"CAT\", \"ZEBRA\"], {\n  // ...\n});\nconstructor(private dnd: SkyhookDndService) { ... }\n\nngOnDestroy() {\n  this.source.unsubscribe();\n  // or\n  this.target.unsubscribe();\n}Then, you will want to add some behaviour beyond the default by looking into the\nSpec input for your connection type.\nDestroying Connections\nAll three types of connection need to be destroyed when your component is\ndestroyed. If you don't, you will have strange problems.\nThe easy way is to call\n.unsubscribe() on the\nconnection object in ngOnDestroy.\nngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n    this.layer.unsubscribe();\n    // neat. we're done.\n}\nBut I have ten other subscriptions!\nIn situations where your component has a lot of subscription logic to\nmaintain, there are more powerful ways of unsubscribing to many things at once.\nYou can create an RxJS Subscription object in your component, and call\nSubscription.add(conn) with your connection. There is a convenience parameter\non each of the SkyhookDndService methods which will do this for you.\nimport { Subscription } from 'rxjs/Subscription';\n\n// ...\n\nsubs = new Subscription();\n\nsource = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\ntarget = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\n// ...\n\nngOnInit() {\n    // subscribe to lots of things here\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n}\nngOnDestroy() {\n  // This will unsubscribe everything, including source and target\n  this.subs.unsubscribe();\n}(It is not recommended to have a large number of drag sources and drop targets\nattached to a single component, especially not in a variably-sized array,\nsimply because that is poor component structure. Instead, consider creating a\ncomponent that handles a single piece of dragging logic, and use an *ngFor over\nthe whole component.)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/2.-connecting-to-dom.html":{"url":"additional-documentation/guide/2.-connecting-to-dom.html","title":"additional-page - 2. Connecting to DOM","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConnecting sources and targets to real DOM elements\nOnce you have created a connection, it is most useful when connected to a real\nDOM element.\nMaking a DOM element draggable\nThis means that events fired inside the element's bounding rectangle will start\na drag. Use DragSourceDirective to do this. It's as simple as:\n\n  drag me\nsource = this.dnd.dragSource(\"DRAGME\", {\n  beginDrag: () => ({}),\n  // ...\n})\n// ...Making a DOM element into a drop target\nThis means your element will react to items being hovered or dropped within its\nbounding rectangle.\n\n  drag me\nsource = this.dnd.dragSource(\"DRAGME\", {\n  beginDrag: () => ({}),\n  // ...\n})\n// ...Drag previews\nThis is a feature unique to the HTML5 backend. If you are using another\nbackend, you will need a Drag Layer (see below) to render anything that follows\nthe mouse.\nBy default, a static screenshot of the original [dragSource] element will form\na drag preview and follow the mouse around.\nUsing a different element as the preview source\nIf you want another element to be the source of the preview, you can use the\n[dragPreview]=\"source\" directive.\nIf you place a DragPreviewDirective on a different element than the\n[dragSource], and pass the same DragSource connection to it, the\npreview element will take over the job of posing for the preview screenshot.\nUsing a 'drag handle'\nThis is a common use of custom drag previews, where a box with a smaller handle\nwithin it is only draggable from the handle. This is useful for moving\ninteractive blocks of UI (e.g.  elements) around the screen, without\ntouching the inputs / selecting text / making unwanted changes.\n\nAttach [dragSource]=\"source\" to the handle.\nAttach [dragPreview]=\"source\" to the overall box being dragged.\nAs always, you may consider applying CSS cursor: move or cursor: grab or\nsimilar to the handle, to make sure users can discover what the handle is\nfor.\n\nUsing an image preview\n\nCreate an image element with const img = new Image(); img.src = \"...\";\nUse img.onload = () => { ... } to wait for it to load. Inside the onload\ncallback, run someDragSourceConnection.connectDragPreview(img).\n\nSee DragSource.connectDragPreview and DragPreviewOptions for options.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/3.-monitoring-state.html":{"url":"additional-documentation/guide/3.-monitoring-state.html","title":"additional-page - 3. Monitoring State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonitoring State\nHow to change your template depending on the drag state\n\nTake any connection object, like DragSource\nCall .listen() with a function that returns what information you want to\nmonitor\nSave the resulting Observable to an instance variable in your component\nUse the observable via the | async pipe to render alternate content in\nyour template.\n\nEach type of connection gets a different set of information available on the\nmonitor. They are laid out in the three interfaces in this module:\n\nDragSourceMonitor\nDropTargetMonitor\nDragLayerMonitor\nAll three derive from MonitorBase\n\nNote that all three monitors have very rapidly-changing information available on\nthem, such as the current viewport-mouse offset. The .listen() functions will\noptimise component updates for you. You don't want to:\n\nSubscribe to more properties than you need. This hinders performance.\nSubscribe to the entire monitor object. It will only fire once, and then\nnever again, because the monitor object itself is the same each time.\n\nMaking decisions in the Spec based on current drag state\nThe other place you get access to a monitor is in the callbacks in each Spec.\nMonitors carry some information only relevant and usable inside these callbacks.\nThose methods are documented in the monitor interfaces, and particularly useful\nmethods are highlighted in each of the Spec callbacks, such as\nDropTargetSpec.drop.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/chess-tutorial.html":{"url":"additional-documentation/chess-tutorial.html","title":"additional-page - Chess Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChess Tutorial\nIn this tutorial, we're building a tiny chess game, with one knight on the\nboard. It's an Angular-specific translation of the original react-dnd\ntutorial. The discussion about how to break down this game into\ncomponents is worth reading the original for. We will carry on implementing the\nthree components:\n\nKnightComponent, responsible for rendering one knight piece\nSquareComponent, just one black or white square on the board\nBoardComponent, 64 squares.\n\nThis tutorial assumes you are familiar with the basics of Angular (version 2+).\nIt also assumes you have read the Quickstart guide, and have attached the\nSkyhookDndModule and the HTML5 backend. Complete source code is available on\nGitHub, in four commits: one, two,\nthree, four, the last of which is the finished\nproduct. You can play with a live demo.\nBasic chess visuals\nWe'll build the KnightComponent first. It is very simple, just a span with a Unicode\nknight character in it.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-knight',\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 400;\n        font-size: 54px;\n        line-height: 70px;\n    }\n    `]\n})\nexport class KnightComponent {\n}Add this component to your module's declarations section, and put\n somewhere on your page.\n\nNext, we will implement SquareComponent. It is responsible only for changing the colour\nof the background and foreground depending on a black input, and rendering\nwhatever was passed to it inside its tags. Make a SquareComponent, add it to\nyour module, and include the following very simple HTML template:\n\n  \nIn the body of the component class, add an input for whether the square should\nbe black or not:\n@Input() black: boolean;Then implement getStyle() by reading this property.\ngetStyle() {\n    return this.black\n        ? { backgroundColor: 'black', color: 'white' }\n        : { backgroundColor: 'white', color: 'black' }\n}Note that by attaching these styles directly via [ngStyle], they are not\naffected by Angular's view encapsulation, so color will apply to any child\ncomponents as well. You could achieve the same by using classes and CSS and\n::ng-deep or turning view encapsulation off, but [ngStyle] is good enough\nfor us.\nThen, we want SquareComponent to take up all the space available to it. This\nway, Square can be arbitrarily large, and we don't have to be concerned with how\nbig the whole board is going to be. Include the following in a styles block,\nor a linked CSS file.\n:host, div {\n    display: block;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n}At this point, you can render one square with a knight in it, like so:\n\n    \n\nIf you're paying attention, you'll notice that height: 100% doesn't really\nmean anything as none of the parent divs have a height to be 100% of, but it\nwill make sense later when we put the Square in a div that has an absolute\nheight.\nThen, let's build the board. Start by building out a component that just renders\none square.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-board',\n    template: `\n    \n        \n            \n        \n    \n    `\n})\nexport class BoardComponent {\n}Now, we need to render 64 of them. We will need an *ngFor, but Angular isn't\nvery good at for loops, so we have to make an array of 64 items.\n\n    \n        \n    \n// ...\nexport class BoardComponent {\n    sixtyFour = new Array(64).fill(0).map((_, i) => i);\n}\nThen, you just have a lot of black squares in a vertical list. Not very chess-y.\nTo make it an 8x8 grid, we are going to wrap them all in a , and use the cool new CSS feature, CSS Grid. Make sure you are\nusing a modern browser. Apply this style to the wrapping .board:\n.board {\n    width: 100%;\n    height: 100%;\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: repeat(8, 12.5%);\n    grid-template-rows: repeat(8, 12.5%);\n}For brevity's sake you could just set .board to a fixed width and height\nof 560px. I added a ContainerComponent, just to specify that size, to keep\nthe board independent of where it will be placed. At this point, you will have\nan 8x8 board, but it still doesn't quite look like chess.\n\nMaking the chessboard pattern and placing one knight on the board\nWe're going to need a way to express coordinates on the board. Define a new\ninterface, to hold x and y coordinates.\nexport interface Coord {\n  x: number;\n  y: number;\n}Save it in a new file, coord.ts, and import it into your Board component file.\nThen, we need to convert [0..63] (the indices of the *ngFor) to Coord\nobjects.\nexport class Board {\n    // ...\n    xy(i): Coord {\n      return {\n          x: i % 8,\n          y: Math.floor(i / 8)\n      }\n    }\n}\nYou can then quite easily go from Coord to whether the square is black or not:\n    // ...\n    isBlack({ x, y }: Coord) {\n        return (x + y) % 2 === 1;\n    }Then, pass the result to each SquareComponent, and render only one KnightComponent in the top\nleft:\n\n    \n        \n    \nAnd look at that, we have a chess board with one knight.\n\nMaking the knight move around\n\nAt this point, your code should look like this commit. You can\nstart fresh from there if you want.\n\nWe can clearly represent the position of a knight in one Coord object. You\ncould store this on the BoardComponent itself:\n\nknightPosition: Coord = { x: 2, y: 5 };But we're going to want to read this elsewhere and drive the game logic from it,\nand we don't want all the game logic to be trapped inside the BoardComponent.\nSo, create a GameService, and represent the changing position of the knight\nwith an RxJS BehaviorSubject. This is an ultra-lightweight way of\nbuilding an @ngrx-style Store without any boilerplate. It allows us to\n'broadcast' updates to the knight's position to any interested components.\nLike any Subject, BehaviourSubject can be used as an Observable, and\ncomponents can subscribe to it with the | async pipe. But unlike a regular\nSubject, it can also have an initial value, and will replay the most recent\nvalue to any new subscribers. This is exactly what we want.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n}As you can see, this is a very simple service. Inject it into your\nBoardComponent, and let's put the Knight where the GameService\nsays it should go.\n\nknightPosition$ = this.game.knightPosition$;\nconstructor(private game: GameService) { }This works, but it's very hard to read. A better solution would be to put the\nentire *ngFor section in the scope of one subscription. You can do that\nwithout introducing a redundant , by using  and a fancy\ntrick: since knightPosition$|async is always truthy, you can put it in an\n*ngIf and give the result a name using the *ngIf=\"AAA as BBB\" syntax. Here's\nthe entire template:\n    \n        \n            \n                \n                    \n                    \n                \n            \n        \n    The resulting template is much clearer.\nNow that we have a knightPosition$ and even a GameService.moveKnight()\nfunction, we can hook up a click event on each  to move the knight\naround the board. We're going to remove it later, so just throw it in the\nBoardComponent:\nhandleSquareClick(pos: Coord) {\n    this.game.moveKnight(pos);\n}Click around, and your noble KnightComponent will follow, even though he is breaking\nthe rules. So, let's add the rules. Amend the GameService to include\na canMoveKnight function, based on the current position and a prospective\nposition. You can store the currentPosition by subscribing internally to\nknightPosition$ and writing out each new value into an instance variable.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n    currentPosition: Coord;\n\n    constructor() {\n        this.knightPosition$.subscribe(kp => {\n            this.currentPosition = kp;\n        })\n    }\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n    canMoveKnight(to: Coord) {\n        const { x, y } = this.currentPosition;\n        const dx = to.x - x;\n        const dy = to.y - y;\n\n        return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n               (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n    }\n\n}Amend handleSquareClick to check the rules before executing the move:\nhandleSquareClick(pos: Coord) {\n    if (this.game.canMoveKnight(pos)) {\n        this.game.moveKnight(pos);\n    }\n}And voilà, your knight won't execute an illegal move. We will be replacing this\nclick handler in just a moment, but we have separated the game logic out, so we\ncan reuse those two functions.\nImplementing drag and drop\n\nAt this point, your code should be look like this commit.\n\nTake a moment to think about what we have to work with. We have:\n\nA KnightComponent which we want to be able to drag,\nMany SquareComponents on which he could be dropped,\nA way to express that state change (GameService.moveKnight),\nAnd a way to compute where we can drop him (GameService.canMoveKnight).\n\nOur strategy for implementing drag and drop is this:\n\nMake the knight draggable\nTurn all the squares into drop targets\nOnly allow drops into squares where canMoveKnight returns true\nOn each successful drop, call moveKnight, and Angular will re-render with\nthe new state.\nAdd some extra visuals to guide the interaction\n\nIf you have used other drag and drop libraries, this may seem a bit weird --\nwhat happens to the Knight that we're dragging after we drop him? The answer is,\nhe disappears. After step 1, we will have a knight you can pick up, but nothing\ninteresting will happen when we let go, except that the preview will vanish. We\nare going to do steps 3 and 4 on the drop targets, which are notified when you\ndrop something on them.\nPart 1. Make the knight draggable\nFirst, we need a type to describe what we're dragging, so that the squares can\nlisten for knights floating above them. Store a constant string \"KNIGHT\" in\na new file. This is better than typing the same string over and over, and serves\nas a single place where all your different chess piece types are defined.\n// constants.ts\nexport const ItemTypes = {\n    KNIGHT: \"KNIGHT\"\n}Then, make your KnightComponent into a drag source.\n\nInject SkyhookDndService into your KnightComponent\nCreate a dead simple drag source which emits ItemTypes.KNIGHT, and a simple\n{} to represent what's being dragged. We don't need any more information\nthan that, but if you were doing >1 piece, you would have to specify which\nknight was being dragged. This is where you'd do it.\nAttach the drag source to the Knight's DOM element.\nIn ngOnDestroy, unsubscribe the drag source.\n\nHere's all four in one go:\nimport { Component } from '@angular/core';\nimport { SkyhookDndService } from 'angular-skyhook';\nimport { ItemTypes } from './constants';\n\n@Component({\n    selector: 'app-knight',\n                     // step 3\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 700;\n        font-size: 54px;\n    }\n    `]\n})\nexport class KnightComponent {\n    // step 2\n    knightSource = this.dnd.dragSource(ItemTypes.KNIGHT, {\n        beginDrag: () => ({})\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.knightSource.unsubscribe();\n    }\n}Try dragging your little knight, and you'll find that you can. But the\ninteraction is slightly confusing - you can't tell at a glance that the knight\nis conceptually in-flight, it just looks like there are two knights. So let's\nlisten to whether we are dragging the knight, and make the stationary one look\ndifferent while we are.\n\nUse the DragSource.listen and DragSourceMonitor.isDragging methods to\nget an observable isDragging$ on your KnightComponent.\nUse that observable in your template to change styles\n\n// component\n// (this is an Observable)\nisDragging$ = this.knightSource.listen(monitor => monitor.isDragging());\n♘/* in the style block */\n.dragging {\n    opacity: 0.25;\n}Now, the knight on the board will be a bit transparent when you've picked it up.\nYou could set it to opacity: 0, but in chess, players like to know where the\npiece came from. angular-skyhook makes no assumptions about how to render\nany elements, so you can always customise their appearance at any stage of the\ndrag and drop process.\nPart 2: Make the squares into drop targets\nBecause canMoveKnight has to be computed once per square, each square is going\nto have to know where it is on the board. However, the SquareComponent is\nperfectly good at what it does. We don't want to ruin a good thing. Let's wrap\nit with another component, BoardSquareComponent, that will handle the drag and drop,\nand leave the black and white rendering to SquareComponent. This is a basic wrapper\nwhich preserves the size of the underlying squares:\nimport { Component, Input  } from \"@angular/core\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n}Add it to your module, and replace the  in the BoardComponent\ntemplate with this:\n\n    \nThen, we're going to add a drop target to BoardSquareComponent and attach it\nto that wrapper div. It's very similar to the drag source.\n\nInject SkyhookDndService\nCreate a drop target\nAttach it to the DOM\nUnsubscribe it in ngOnDestroy.\n\nimport { Component, Input  } from \"@angular/core\";\nimport { SkyhookDndService } from 'angular-skyhook';\nimport { ItemTypes } from \"./constants\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n                         \n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n\n    // step 2\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.target.unsubscribe();\n    }\n\n}Parts 3 and 4: make the knight move around on drop\nNext up is to incorporate the game logic, and to actually move the knight. We're\ngoing to use two hooks in the drop target: DropTargetSpec.canDrop and\nDropTargetSpec.drop. We have already done the heavy lifting for both in\nGameService. Inject GameService in the constructor, and incorporate its\nmethods.\ntarget = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    canDrop: monitor => {\n        return this.game.canMoveKnight(this.position);\n    },\n    drop: monitor => {\n        this.game.moveKnight(this.position);\n    }\n});\n\nconstructor(private dnd: SkyhookDndService, private gme: GameService) {}Now you should be able to drag your knight around the board!\nPart 5: Extra visuals\nWe have some guidance already about where you can drop a knight. The mouse\ncursor gets a different icon depending on whether you can or not. But usually,\nthis is not enough of an indicator. Good UI means making difficult things\nobvious and learnable. Someone who has never seen a knight should be able to\nfigure out where one can go.\nIn that spirit, we will change the colour of the squares while dragging,\ndepending on whether they represent a valid move, and colour the square you're\nhovering over either red or green depending on whether dropping would result in\na move.\nThe procedure is almost identical to what we did for the Knight earlier on.\n\nUse the DropTarget.listen, DropTargetMonitor.canDrop and\nDropTargetMonitor.isOver methods to observe changes in drag state\nUse observables in your template to change styles on an overlay div.\n\n// We are assuming RxJS 5.5+ here, but you can use plain Observable.map\nimport { map } from 'rxjs/operators';\n\n// template:    \n        \n            \n        \n        \n    \nexport class BoardSquareComponent {\n    // ...\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n        // ...\n    });\n\n    collected$ = this.target.listen(m => ({\n        canDrop: m.canDrop(),\n        isOver: m.isOver(),\n    }));\n\n    showOverlay$ = this.collected$.pipe(map(c => c.isOver || c.canDrop));\n\n    overlayStyle$ = this.collected$.pipe(map(coll => {\n        let { canDrop, isOver } = coll;\n        let bg: string = \"rgba(0,0,0,0)\";\n        if (canDrop && isOver) { bg = 'green'; }\n        else if (canDrop && !isOver) { bg = 'yellow'; }\n        else if (!canDrop && isOver) { bg = 'red'; }\n        return {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n            opacity: 0.5,\n            backgroundColor: bg\n        }\n    }));\n\n    // ...\n\n}Here's what it looks like:\n\nLastly, we're going to customize the drag preview (that little knight that\nfollows the mouse around). angular-skyhook has some very powerful ways to\ncustomize this, but we're going to use a simple image. It's quite simple:\n\nCreate an Image\nWait for it to load\nConnect it to the knightSource as a drag preview\n\nWe can do this in just a few lines.\n// ...\nexport class KnightComponent {\n    // ...\n\n    ngOnInit() {\n        const img = new Image();\n        img.src = // ... long 'data:image/png;base64' url\n                  // regular 'https://' URLs work here too\n        img.onload = () => this.knightSource.connectDragPreview(img);\n    }\n}For that long URL, see this file.\nThen we get a funky horse as our preview.\n\nHave a go with the live demo here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/translating-react-code.html":{"url":"additional-documentation/translating-react-code.html","title":"additional-page - Translating React Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslating React Code\nThere are many code examples and libraries on the web written for react-dnd,\nthe most important of which is the actual react-dnd\ndocumentation. In the\ninterest of making them useful or at least understandable, this library presents\na fairly similar API to the original. There are, of course, some differences\nmandated by the style and limitations of React and Angular. We will illustrate\nthis with the react-dnd DragSource compared to angular-skyhook\nSkyhookDndService.dragSource(). Here are the original API\ndocs on\nDragSource; the following is a small but complete example for a quick\nreference. If you know how to use react-dnd already, then this should show you\nmost of it. If you don't know react-dnd, this will help you read the example\ncode demos in the react-dnd documentation.\nHere's a basic example in React:\nlet itemSourceSpec = {\n  beginDrag: (props, monitor) => {\n    return { someProperty: props.someProperty };\n  },\n  endDrag: (props, monitor, component) => {\n    if (monitor.didDrop()) {\n      component.fireAction(monitor.getItem());\n    }\n  }\n}\n@DragSource(\"ITEM\", itemSourceSpec, (connect, monitor) => ({\n  connectDragSource: connect.connectDragSource(),\n  isDragging: monitor.isDragging(),\n}))\nexport class MyComponent extends React.Component {\n  fireAction() { /* ... */ }\n  render() {\n    const { someProperty, isDragging } = this.props;\n    return connectDragSource(\n      \n        {someProperty}\n        {isDragging ? 'I am being dragged now' : null}\n      \n    );\n  }\n}And here's the Angular translation:\n@Component({\n  template: `  \n    {{someProperty}}\n    \n      I am being dragged now\n    \n  \n  `})\nexport class MyComponent {\n  @Input() someProperty: string;\n  itemSource = dnd.dragSource(\"ITEM\", {\n    beginDrag: (monitor) => {\n      return { someProperty: this.someProperty };\n    },\n    endDrag: (monitor) => {\n      if (monitor.didDrop()) {\n        this.fireAction(monitor.getItem());\n      }\n    }\n  });\n  collected$ = this.itemSource.listen(monitor => ({\n    isDragging: monitor.isDragging(),\n  }));\n  constructor(private dnd: SkyhookDndService) {}\n  fireAction(item) { /* ... */ }\n  ngOnDestroy() { this.itemSource.destroy(); }\n}As you can see, the two are very similar. You should be able to take most\nReact/react-dnd examples and translate them quite directly into Angular. You\ncan almost copy and paste some parts.\n1. Biggest difference: Connections instead of Higher-Order Components\nThere is a React concept of 'props', similar to Input() in Angular. The\nprimary difference relevant to us is that in React you can create a 'wrapper' or\n'higher-order' component that will pass all of its props to the one it is\n'wrapping' or 'decorating', with extra behaviour or new props added. This is how\nreact-dnd works: wrap your component with @DragSource(type, spec, collect:\n(connect, monitor) => Object), and the output of the  collect function is\ninjected into your component's props.\nIn Angular, we run everything inside your component, using methods on an\ninjected SkyhookDndService to create connections. Connections are a go-between\nfor subscribing to the global drag state and can be connected to DOM\nelements. This difference is typical of the React Way and the Angular Way. You\ncan create more than one connection for a component, to accomplish the same\nthing as composing multiple decorators in react-dnd.\nThere are five other ways this approach makes for slightly different-looking but\nvery similar-functioning code.\n2. You must destroy the connection object when you are done with it.\nIn React, this is managed by the wrapper component. In Angular, you have to do\nit yourself. See ConnectionBase.unsubscribe.\n3. No props or component arguments in the spec callbacks\nThere are no props in Angular, as discussed above. Instead, all inputs to a component\nor properties relevant to the template are declared on the component class.\nTherefore, using this is appropriate instead. That also makes component\nmoot, since it would also refer to this. Therefore, all of the callbacks on the\ntwo *Spec interfaces have only monitor as an argument.\nOne thing to be aware of is that to access this in an function you pass\nelsewhere, you must use Arrow notation: (arrow) => this.notation; for your\nspec callbacks.\n4. Information about current drag state comes through an Observable\nIn react-dnd the collect((props, monitor) => {}) function supplies the\ncomponent props 'from above'. In Angular (here, DragSource.listen), the\nlibrary gives you an Observable you can subscribe to in your template. The\nexample above creates an Object { ... } and subscribes to it all in one go\n(the internals make this efficient), but you are free to do listen(m =>\nm.isDragging()), with one subscription for each interesting value. You might\ncombine information from two different connections using\nObservable.combineLatest, for example.\nI found the terms connect and collect far too similar and confusing, so\nI renamed collect to listen.\n5. connectDragSource() (etc.) functions vs Angular directives\nIn the example above, connect.connectDragSource() returns a function that will\nlink up a particular part of the JSX template's DOM to the wrapper component. To\naccomplish the same thing in Angular we must connect some DOM from the template\nto a Connection object. The Angular Way to do this is with a directive,\nwhich connects to the DOM via its injected ElementRef. The Angular translation\nabove uses [dragSource]=\"itemSource\" on the same part of the template as the\nReact code does.\nSome React examples will have two different drag sources + associated connectors\n(on different DOM elements), or one source and one connectDragPreview. Angular\ncan do both patterns with directives, because each directive is linked to one Connection.\n6. Can't supply a dynamic type via a (props) => props.type callback, use setType instead\nImagine you want to make a component draggable based on type(s) specified on the\ncomponent inputs.\nreact-dnd allows strings and ES6 Symbols in the type argument. But you can\nalso pass a function  of (props) => string|symbol; in this way, your item\ntypes can depend on the inputs to your component, and even change over time when\nthe props change. It's not a plain asynchronous callback like the rest of the\nspec, it is called when the props change on the decorating component, before any\nasynchronous drag operations start. Angular doesn't have a way for arbitrary\nobjects to listen to ngOnChanges(), so we have to do it manually.\nYou can supply a default type, or null, and update it in later as the\n@Input() property is populated. If you supply null, angular-skyhook will\ndefer connecting the DOM and the subscription to the monitor until this is\ndone. See DragSource.setType for more information.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
